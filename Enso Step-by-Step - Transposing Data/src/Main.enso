from Standard.Base import all
from Standard.Table import all
from Standard.Database import all
from Standard.AWS import all
from Standard.Geo import all
from Standard.Google import all
from Standard.Microsoft import all
from Standard.Snowflake import all
from Standard.Tableau import all
import Standard.Examples
import Standard.Visualization
from Standard.Base.Meta import Enso_Project





## ![image](/images/step-by-step-example.png)
   # Transposing Data in Enso Analytics

   The `transpose` component in Enso Analytics is a powerful tool for reshaping tables by converting columns into rows and vice versa, enabling flexible data restructuring for analysis, visualization, or integration with other workflows. This component is particularly useful when you need to pivot data to focus on specific attributes or prepare it for operations like joins, filtering, or aggregations. Paired with the `cross_tab` component, which reverses the transformation, transpose allows users to switch between wide and narrow data formats seamlessly. While `transpose` creates a narrower table with more rows, it may require additional steps to manage column order or handle specific data types.


   ![image](/images/transpose.png)
   ## Key Component

   ### transpose

   The Table.transpose component restructures a table by converting specified columns into rows, creating a "key-value" format with designated key columns, a name column for the transposed column headers, and a value column for the corresponding data.

   - **Functionality**: Takes a table and a list of key columns to retain as-is, transposing the remaining columns into two new columns: a "name" column (containing the original column headers) and a "value" column (containing the corresponding cell values). Users can specify the names of the output name and value columns (e.g., "Month" and "Amount"). The resulting table is narrower (fewer columns) and longer (more rows).
   - **Use Case**: Reshape a sales dataset with columns like Product, Category, January, February, etc., into a table with Product, Category, Month, and Amount, where Month contains values like "January", "February", and Amountcontains the corresponding sales figures.
   - **Benefit**: Simplifies analysis by transforming wide datasets into a long format, making it easier to filter, group, or visualize data based on specific attributes.
   - **Downside**: The transposed table may require additional steps, such as cross_tab or reorder_columns, to restore the original format or adjust column order, especially when dealing with non-numeric columns like months.

   ## Supported Features

   - **Flexible Key Column Selection**: Users can specify which columns remain unchanged (key columns), while others are transposed into name-value pairs, allowing tailored data restructuring.
   - **Customizable Output Columns**: The names of the output name and value columns can be defined (e.g., "Month" and "Amount"), enhancing clarity and compatibility with downstream operations.
   - **Handling Mixed Data Types**: Supports transposing columns with different data types (e.g., text, numbers), with the output value column accommodating mixed types or Nothing (null) values.
   - **Inverse Operation with Cross-Tab**: The cross_tab component can reverse the transposition, restoring the original wide format, with options to aggregate values (e.g., sum, count) during the process.
   - **Integration with Enso Ecosystem**: Transposed tables integrate seamlessly with other Enso components, such as filter, select, aggregate, or visualization tools, for further processing or inspection.

   ## Example Workflow

   In this example, a sales dataset is reshaped using the transpose component:

   - **Basic Transpose**: Start with a table containing Product, Category, Suggested Age Range, Average Monthly Sales, and monthly columns (January to December). Use Table.transpose ['Product', 'Category', 'Suggested Age Range', 'Average Monthly Sales'] "Month" "Amount" to retain key columns and transpose monthly columns into Month and Amount columns.
   - **Selective Columns**: Select specific columns (e.g., Product, Category) using select_columns before transposing to focus only on relevant data, reducing the scope of the transformation.
   - **Removing Columns**: Use remove_columns to exclude columns like Average Monthly Sales before transposing, ensuring only desired columns are reshaped.
   - **Transpose and Cross-Tab**: Transpose a table to a narrow format, then use cross_tab to revert to the original wide format. For example, cross_tab ['Product', 'Category'] 'Name' (..Sum 'Value') ..Ignore aggregates values during the reverse operation. Use reorder_columns to restore the desired column order, as cross_tab does not guarantee order.
   - **Advanced Reshaping**: Transpose a table with multiple key columns (e.g., Product, Category, Suggested Age Range), then apply cross_tab to pivot on a different column (e.g., Category) and aggregate values, followed by another transpose to further reshape the data.

   ## Use Cases

   - **Data Normalization**: Convert a wide sales dataset with monthly columns into a long format for easier filtering or grouping by month.
   - **Preparing for Visualization**: Reshape data into a key-value format to create charts or graphs, such as plotting sales by month for each product.
   - **Prototyping Transformations**: Test data restructuring scenarios by transposing specific columns to explore different data organizations without altering the original dataset.
   - **Integration with Joins**: Transpose data to align with another dataset’s structure for joins or merges in a workflow.
   - **Simplifying Analysis**: Transform wide datasets with many columns into a narrower format to focus on key attributes for ad hoc analysis.

   ## Benefits

   The `transpose` component in Enso Analytics provides a flexible and intuitive way to reshape datasets, enabling users to convert wide tables into a long, key-value format for analysis, visualization, or integration. Its ability to retain specified key columns, customize output column names, and handle mixed data types makes it versatile for various use cases. When paired with cross_tab, it supports reversible transformations, allowing users to switch between wide and narrow formats as needed. The component’s seamless integration with other Enso tools, such as filtering, aggregation, or visualization (accessible via the eyeball icon), enhances its utility for data preparation and exploration. However, users should be aware that additional steps, like reordering columns or handling non-numeric data, may be required to achieve the desired output structure. By simplifying data reshaping, transpose empowers users to efficiently prepare and analyze data in Enso Analytics.
main =
    node2 = Table.input [['Product', ['Smartphones', 'Laptops', 'Tablets', 'Gaming Consoles', 'Headphones', 'Smartwatches', '4K Televisions', 'Bluetooth Speakers', 'External Hard Drives', 'Digital Cameras']], ['Category', ['Mobile Devices', 'Computers', 'Mobile Devices', 'Gaming', 'Audio', 'Wearables', 'Home Entertainment', 'Audio', 'Storage', 'Cameras']], ['Suggested Age Range', ['13+', '13+', '7+', '7+', 'All ages', '13+', 'All ages', 'All ages', '13+', 'All ages']], ['Average Monthly Sales', ['98060.83', '80541.75', '116195.92', '79492.08', '88328.08', '108180.58', '91235.92', '74122.08', '66671.42', '105891.33']], ['January', ['34437', '12211', '197785', '61493', '47278', '193389', '101204', '7607', '34456', '22629']], ['February', ['16816', '46864', '154917', '23074', '91066', '38490', '42622', '133611', '99565', '143046']], ['March', ['175940', '135162', '123990', '38279', '168964', '60653', '183312', '139929', '76367', '79160']], ['April', ['153692', '40953', '170031', '141929', '95331', '146627', '151203', '6876', '118689', '119348']], ['May', ['197300', '54727', '174946', '99038', '168788', '178931', '157355', '115275', '52205', '199745']], ['June', ['118466', '71892', '95218', '148019', '9726', '93864', '67527', '56031', '12861', '189473']], ['July', ['166496', '37289', '15656', '43210', '149108', '95304', '106817', '46492', '100486', '161718']], ['August', ['29861', '75426', '86954', '18802', '95578', '143751', '37448', '28675', '190517', '37016']], ['September', ['110412', '64758', '61541', '46886', '59242', '159341', '21047', '28817', '19811', '31424']], ['October', ['58990', '102021', '142906', '167314', '60223', '114899', '74681', '192828', '59649', '36991']], ['November', ['61466', '147446', '129289', '26668', '25460', '59582', '25207', '12785', '26312', '155829']], ['December', ['52854', '177752', '41118', '139193', '89173', '13336', '126408', '120539', '9139', '94317']]]
    ## Basic Transpose Example: Key columns are unchanged but will be duplicated on all remaining columns. 
    table1 = node2.transpose ['Product', 'Category', 'Suggested Age Range', 'Average Monthly Sales'] "Month" "Amount"
    ## Transpose - Removing columns and Mixing Data Types. Select the columns to keep (or use remove_columns as in the next example). 
    table3 = node2.select_columns ['Product', 'Category', 'Suggested Age Range', 'Average Monthly Sales']
    table2 = table3.transpose ['Product']
    ## Transpoose - Multiple Key Columns. Remove columns that you do not want included in either the key columns or the name/value output
    table4 = node2.remove_columns ['Average Monthly Sales']
    table5 = table4.transpose ['Product', 'Category', 'Suggested Age Range']
    ## Understanding the difference between transpose and cross-tab.
    node1 = Table.input [['Product', ['Smartphones', 'Laptops', 'Tablets', 'Gaming Consoles', 'Headphones', 'Smartwatches', '4K Televisions', 'Bluetooth Speakers', 'External Hard Drives', 'Digital Cameras']], ['Category', ['Mobile Devices', 'Computers', 'Mobile Devices', 'Gaming', 'Audio', 'Wearables', 'Home Entertainment', 'Audio', 'Storage', 'Cameras']], ['Suggested Age Range', ['13+', '13+', '7+', '7+', 'All ages', '13+', 'All ages', 'All ages', '13+', 'All ages']], ['Average Monthly Sales', ['98060.83', '80541.75', '116195.92', '79492.08', '88328.08', '108180.58', '91235.92', '74122.08', '66671.42', '105891.33']], ['January', ['34437', '12211', '197785', '61493', '47278', '193389', '101204', '7607', '34456', '22629']], ['February', ['16816', '46864', '154917', '23074', '91066', '38490', '42622', '133611', '99565', '143046']], ['March', ['175940', '135162', '123990', '38279', '168964', '60653', '183312', '139929', '76367', '79160']], ['April', ['153692', '40953', '170031', '141929', '95331', '146627', '151203', '6876', '118689', '119348']], ['May', ['197300', '54727', '174946', '99038', '168788', '178931', '157355', '115275', '52205', '199745']], ['June', ['118466', '71892', '95218', '148019', '9726', '93864', '67527', '56031', '12861', '189473']], ['July', ['166496', '37289', '15656', '43210', '149108', '95304', '106817', '46492', '100486', '161718']], ['August', ['29861', '75426', '86954', '18802', '95578', '143751', '37448', '28675', '190517', '37016']], ['September', ['110412', '64758', '61541', '46886', '59242', '159341', '21047', '28817', '19811', '31424']], ['October', ['58990', '102021', '142906', '167314', '60223', '114899', '74681', '192828', '59649', '36991']], ['November', ['61466', '147446', '129289', '26668', '25460', '59582', '25207', '12785', '26312', '155829']], ['December', ['52854', '177752', '41118', '139193', '89173', '13336', '126408', '120539', '9139', '94317']]]
    ## transpose and cross_tab are inverse operations. In the transpose component the data becomes narrow (less columns) and long (more rows). In the cross_tab, the data is returned to its original wide format.
    table6 = node1.transpose ['Product', 'Category', 'Suggested Age Range', 'Average Monthly Sales']
    table7 = table6.cross_tab ['Product', 'Category', 'Suggested Age Range', 'Average Monthly Sales'] 'Name' (..Sum 'Value') ..Ignore
    ## Column order is not guaranteed in a cross_tab. Using a reorder_columns component, columns can be ordered in any way. Had the month column been numeric, sort_coumns can be used to restore order.
    table8 = table7.reorder_columns ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] ..After_Other_Columns
    ## Transpose and Cross_tab components working together
    table9 = node1.remove_columns ['Average Monthly Sales']
    table10 = table9.transpose ['Product', 'Category', 'Suggested Age Range']
    table11 = table10.cross_tab ['Suggested Age Range'] 'Category' (..Sum 'Value' "Total")
    table12 = table11.transpose ['Suggested Age Range']
    table13 = table12.cross_tab ['Name'] 'Suggested Age Range' (..Sum 'Value')



#### METADATA ####
[[{"index":{"value":6841},"size":{"value":1909}},"8ad0e6ca-6f9f-48fc-922f-e00e75c3f2f1"],[{"index":{"value":8872},"size":{"value":15}},"b7a2c800-f423-40de-aad5-a34651a6c532"],[{"index":{"value":8872},"size":{"value":87}},"5332334c-d2f1-49c8-bbd9-ca66940f3b29"],[{"index":{"value":8872},"size":{"value":95}},"69dc6171-73b2-4d86-936b-7d7fe8dd4c68"],[{"index":{"value":8872},"size":{"value":104}},"e22eb2cf-17aa-4aab-93ad-ad50ab6221a1"],[{"index":{"value":9125},"size":{"value":20}},"84c8f18c-92f9-434d-a2b7-9d13129dceb9"],[{"index":{"value":9125},"size":{"value":92}},"73fb7732-a425-4452-be17-209fa2d08054"],[{"index":{"value":9231},"size":{"value":16}},"2cb3124c-e443-4bcc-ab39-44d84f7b81e0"],[{"index":{"value":9231},"size":{"value":28}},"9709929c-a144-4fae-bbc3-da59204924a7"],[{"index":{"value":9411},"size":{"value":20}},"dd2203a8-5f55-40c6-8e6f-11e5e9f3d948"],[{"index":{"value":9411},"size":{"value":46}},"a60727a3-face-49bf-96a8-0cad9e0b2c93"],[{"index":{"value":9471},"size":{"value":16}},"37299c9b-26ff-4256-afaa-1a9243db694f"],[{"index":{"value":9471},"size":{"value":63}},"c2738183-aea9-44d3-9dfe-85a5f8ffb3b0"],[{"index":{"value":9616},"size":{"value":1909}},"05bf845f-d8e6-47c9-a942-86005da379a2"],[{"index":{"value":11750},"size":{"value":15}},"07b8853c-2aec-4390-a125-8c3d3346f759"],[{"index":{"value":11750},"size":{"value":87}},"7d75d0f8-581c-4e2a-895b-aeb3585babd6"],[{"index":{"value":11851},"size":{"value":16}},"a92eb4ca-7202-412c-a15e-5bd686a6b8b1"],[{"index":{"value":11851},"size":{"value":88}},"b4c0527d-0859-4e0b-880d-fe1f6531d351"],[{"index":{"value":11851},"size":{"value":95}},"b4e8baa3-79de-45c8-b1f1-5a8a4e43e1ee"],[{"index":{"value":11851},"size":{"value":111}},"92925c3e-2adc-4bba-ad6c-9896d7714d04"],[{"index":{"value":11851},"size":{"value":120}},"0ab9aaa6-a570-4892-8e79-9e8f21e805f9"],[{"index":{"value":12186},"size":{"value":22}},"9008db1a-c68f-4f75-8285-65898af69975"],[{"index":{"value":12186},"size":{"value":145}},"96e32329-9b67-4b32-a091-6f7e123bae69"],[{"index":{"value":12186},"size":{"value":167}},"e6863811-cae2-4ff6-afa4-b3b136778a63"],[{"index":{"value":12426},"size":{"value":46}},"a5fd5571-1022-41b2-8aac-1cd869bc8851"],[{"index":{"value":12487},"size":{"value":63}},"2e738a15-ebec-4575-8a19-519f47a595cc"],[{"index":{"value":12565},"size":{"value":17}},"d986c394-6c7c-49e9-854f-6d3f49482921"],[{"index":{"value":12565},"size":{"value":41}},"d17e1174-ff15-45f8-b1f8-afced9167535"],[{"index":{"value":12565},"size":{"value":52}},"b00f53e5-ba5e-453c-94df-88b304091fa8"],[{"index":{"value":12565},"size":{"value":76}},"a919b1a8-89d1-4a7b-813f-dbd3bf906e66"],[{"index":{"value":12656},"size":{"value":17}},"4278fe0b-70b7-4f43-87cb-b2f926e1ca71"],[{"index":{"value":12656},"size":{"value":41}},"f06cc69c-7d31-4964-9e19-7936c7a386db"],[{"index":{"value":12712},"size":{"value":17}},"3aba3bc6-54ea-488b-84f1-1107ba7d96bf"],[{"index":{"value":12712},"size":{"value":26}},"c75b941e-8236-491f-bab9-b75642a2115f"],[{"index":{"value":12712},"size":{"value":48}},"86e9185c-8d71-4377-b13b-210494561d99"],[{"index":{"value":12712},"size":{"value":64}},"055eec05-de95-449a-8cb0-a6c0fb384ff4"]]
{"ide":{"node":{"8ad0e6ca-6f9f-48fc-922f-e00e75c3f2f1":{"position":{"vector":[-1857,-71]}},"e22eb2cf-17aa-4aab-93ad-ad50ab6221a1":{"position":{"vector":[-1548,-350]},"visualization":{"show":true,"width":1341.3464334244575}},"69dc6171-73b2-4d86-936b-7d7fe8dd4c68":{"position":{"vector":[-1579,-324]},"visualization":{"show":true}},"5332334c-d2f1-49c8-bbd9-ca66940f3b29":{"position":{"vector":[-1579,-324]},"visualization":{"show":true}},"b7a2c800-f423-40de-aad5-a34651a6c532":{"position":{"vector":[-1579,-324]}},"73fb7732-a425-4452-be17-209fa2d08054":{"position":{"vector":[-1548,-700]}},"84c8f18c-92f9-434d-a2b7-9d13129dceb9":{"position":{"vector":[-1403,-599]}},"9709929c-a144-4fae-bbc3-da59204924a7":{"position":{"vector":[-1548,-772]},"visualization":{"show":true,"width":770.5676049666155,"height":177.62385103095454}},"2cb3124c-e443-4bcc-ab39-44d84f7b81e0":{"position":{"vector":[-1458,-636]}},"a60727a3-face-49bf-96a8-0cad9e0b2c93":{"position":{"vector":[-1548,-1085]},"visualization":{"show":true,"width":1366.6918966072208}},"dd2203a8-5f55-40c6-8e6f-11e5e9f3d948":{"position":{"vector":[-667,-882]}},"c2738183-aea9-44d3-9dfe-85a5f8ffb3b0":{"position":{"vector":[-1548,-1307]},"visualization":{"show":true,"width":997.2349565121281,"height":181.77419825443332}},"37299c9b-26ff-4256-afaa-1a9243db694f":{"position":{"vector":[-658,-960]}},"05bf845f-d8e6-47c9-a942-86005da379a2":{"position":{"vector":[-1759,-1807]}},"7d75d0f8-581c-4e2a-895b-aeb3585babd6":{"position":{"vector":[-1595,-2069]},"visualization":{"show":true,"width":1014.8335726704149}},"07b8853c-2aec-4390-a125-8c3d3346f759":{"position":{"vector":[-1595,-2069]}},"0ab9aaa6-a570-4892-8e79-9e8f21e805f9":{"position":{"vector":[-1595,-2300]},"visualization":{"show":true,"width":1479.6726200432927,"height":322.493101514793}},"92925c3e-2adc-4bba-ad6c-9896d7714d04":{"position":{"vector":[-1595,-2300]},"visualization":{"show":true,"width":1479.6726200432927,"height":322.493101514793}},"b4e8baa3-79de-45c8-b1f1-5a8a4e43e1ee":{"position":{"vector":[-1595,-2300]}},"b4c0527d-0859-4e0b-880d-fe1f6531d351":{"position":{"vector":[-1595,-2300]}},"a92eb4ca-7202-412c-a15e-5bd686a6b8b1":{"position":{"vector":[-1595,-2300]}},"e6863811-cae2-4ff6-afa4-b3b136778a63":{"position":{"vector":[-1595,-2779]},"visualization":{"show":true,"width":1538.0704062862205,"height":337.6940776285764}},"96e32329-9b67-4b32-a091-6f7e123bae69":{"position":{"vector":[-1595,-2704]}},"9008db1a-c68f-4f75-8285-65898af69975":{"position":{"vector":[-1595,-2704]}},"a5fd5571-1022-41b2-8aac-1cd869bc8851":{"position":{"vector":[474,-2078]},"visualization":{"show":true,"width":1366.6918966072208}},"2e738a15-ebec-4575-8a19-519f47a595cc":{"position":{"vector":[474,-2300]},"visualization":{"show":true,"width":997.2349565121281,"height":181.77419825443332}},"a919b1a8-89d1-4a7b-813f-dbd3bf906e66":{"position":{"vector":[474,-2563]},"visualization":{"show":true,"width":1670.6746474872386}},"b00f53e5-ba5e-453c-94df-88b304091fa8":{"position":{"vector":[493,-2735]}},"d17e1174-ff15-45f8-b1f8-afced9167535":{"position":{"vector":[493,-2735]}},"d986c394-6c7c-49e9-854f-6d3f49482921":{"position":{"vector":[493,-2735]}},"f06cc69c-7d31-4964-9e19-7936c7a386db":{"position":{"vector":[474,-2794]},"visualization":{"show":true,"width":1296.682777010997,"height":397.48254675837404}},"4278fe0b-70b7-4f43-87cb-b2f926e1ca71":{"position":{"vector":[493,-2966]}},"055eec05-de95-449a-8cb0-a6c0fb384ff4":{"position":{"vector":[474,-3273]},"visualization":{"show":true,"width":1259.697405587434,"height":299.426726642647}},"86e9185c-8d71-4377-b13b-210494561d99":{"position":{"vector":[493,-3445]}},"c75b941e-8236-491f-bab9-b75642a2115f":{"position":{"vector":[493,-3445]}},"3aba3bc6-54ea-488b-84f1-1107ba7d96bf":{"position":{"vector":[493,-3445]}}},"widget":{"8ad0e6ca-6f9f-48fc-922f-e00e75c3f2f1":{"WidgetTableEditor":{"size":{"x":1879.0993632220163,"y":150}}},"05bf845f-d8e6-47c9-a942-86005da379a2":{"WidgetTableEditor":{"size":{"x":1949.871505527789,"y":150}}}},"snapshot":"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","import":{}}}