from Standard.Base import all
from Standard.Table import all
import Standard.Visualization

## ![image](eags.png)

   # Selecting and Joining Data

   **This exercise is available on the Enso Community at <<<https://community.ensoanalytics.com/c/enso-analytics-101/>>>. Working through the exercises on Community lets you to keep track of your progress, and allows you to open the exercise on a second screen.**

   ### IT IS HIGHLY RECOMMENDED THAT YOU EXPERIENCE THIS EXERCISE BY USING THE LEARNING PATH ON ENSO COMMUNITY!

   This is the last in a series of four (4)  Exercises designed to help you quickly master Enso Analytics. Each Exercise is broken up in to a number of learning objectives.


   Start with Excel basics and visual components, then advance through aggregations, data cleaning, and multi-sheet integration. Each exercise tackles common business scenarios—from messy data cleanup to customer analysis across multiple datasets.


   By completion, you'll have the confidence to handle your organization's data challenges. 


   Users who complete these four exercises before jumping into their first real use case are over **10 times more likely to be successful**.


   The [Enso Community](<https://community.ensoanalytics.com>) provides advanced workflows for continued growth beyond these foundational skills.

   > **Note:** This example assumes you have completed Exercises 1, 2, and 3 which have very detailed instructions on how to add and configure new components, how to open each components visualization panel, how to move and reconnect components and more.If you haven't completed these exercises, and the instructions are not sufficient here, we highly recommend you start with these three exercises.


   ## Goal
   In this exercise, you will read an Excel workbook containing three (3) worksheets that contain connected information about bank customers.  


   Your goal is to create a summary of information about the Savings Accounts that includes:

   account_id | open_date | created_date | last_updated_date | active_passive | Base Rate


   You will join the Customers, Accounts and ECBRates worksheets together to solve this exercise. 

   # **Objective 1:**  Prepare the Account data

   We only want to consider records that are Savings Accounts, and we only need two columns, as we will be joining data from the Customers and ECBRates worksheets in later steps.

   ## Step 1 of 4 - Read the Excel Workbook

   - In the toolbar at the top of the canvas, click on the **+ Input** button to add a new Input Component. This will open the Input Component Browser.
   - In the component browser, Choose the ***Data.read*** component by clicking on its name.
   - Click on the word *path* that is highlighted in royal blue on the ***Data.read*** component.
   - Click on *Choose file...*
   - Navigate to your Documents/enso-projects/Samples/Data folder.
   - Choose the file named **Customer_Data.xlsx.**
   - 
   ## Step 2 of 4- Add a new component after the ***Data.read*** component.

   - Add a ***read*** component to the ***Data.read*** component
   - Click on the “query” argument
   - Select the **Accounts** sheet

   ## Step 3 of 4- Filter to the Savings Account products by adding a new component after the ***read*** component.

   - Choose the ***filter*** component
   - Click on the column argument
   - Select the **product_name** column
   - Click on the filter argument
   - Select the Equals option
   - Click on the “to” argument
   - Select the <Text Value> option
   - Click into the “ “ argument
   - Type “Savings Account” (case sensitive)
   You should see **Total Row Count: 1026** at the bottom of the ***filter*** component’s table visualization.

   ![Image](/images/image.png)

   ## Step 4  of 4 - Select 3 columns by adding a new component after the ***filter*** component.

   - Add a ***select_columns*** component to the ***filter*** component.
   - Select the **account_id** and **open_date** columns.
   ![Image](/images/image_1.png)
   > **Note:** The ***select_columns*** component also enables you to re-order the columns. Select them in the order that you want them to appear, and then click on the ‘reorder columns’ button in the components visualization.

   ### **🎉🥳🎈CONGRATULATIONS! You have created a filtered table with just two columns from the Accounts worksheet.**

   - You also learned a new way to read Excel Worksheets from an Excel Workbook. Previously, you double clicked on the Worksheet’s name from the visualization on the ***Data.read*** that opened the Excel Workbook.
   - You learned how to select columns, and learned that you can reorder columns using the ***select_columns*** component.



   # **Objective 2:**  Read the Customers data

   1️⃣        Add a new component after the ***Data.read*** component by either dragging from the output port (the bottom edge) of the ***Data.read*** component, or clicking the ➕ button on the component.

   - Choose the ***read*** component
   - Click on the query argument
   - Select the **Customers** sheet

   ### 

   ## **Objective 3:**  Join the Accounts (Left) and the Customers (Right) data together

   - Add a ***join*** component after the ***select_columns*** component which contains our filtered Accounts data.
   - Connect the outgoing data from the ***read*** component (Customers) by dragging from the output port (the bottom edge) of the ***read*** component to the royal blue **right** argument on the ***join*** component. (see animation below)
   - - Choose the join_kind of **..Inner** (more on [Enso Join Options](<https://help.enso.org/docs/api/Standard.Table/Table/Table.join/)).>
   - Click on the on (➕) and accept the **account_id**(1st field) column
   - Click on the right argument and select the **acct_id** column

   > **NOTE:** in the screenshot below, the ***read*** component with the **Customers** worksheet is connected to the ***Data.read*** at the top of the workflow.

   ![Image](/images/join-connect.gif)




   ## Step 3 - Remove the acct_id column
   - Add a ***remove_columns*** component following ***join*** component
   - Choose the **acct_id column**
   You should now have **1026 rows** with columns: **account_id, open_date, created_date, last_updated_date, active_passive.**


   ![Image](/images/image_3.png)
   > **Note:**  You can select_columns and choose all desired columns or use the remove_columns component and de-select the one unnecessary column.

   ### **🎉🥳🎈CONGRATULATIONS! You have joined two tables and removed columns using two different methods!**
   - You also learned how to connect the output of one component (the ***read*** component with the Customer data) as an input to the **right** argument on the Accounts data in the join.



   ## Objective 3:  Joining your data to the ECB Rates

   The ECB rates are provided as a table of **Start Date**, **End Date**, and **Rate.** The final task is to join the result from Objective 2 to these rates. 

   There is a challenge in using the ECB data.  The use of the table reads each row as follows:  Date greater than or equal to **StartDate** until **EndDate**.  In this definition of the table, there is a redundancy where each **StartDate** is equal to the prior period’s **EndDate**. We will fix this issue and then will join the rates to the output from Objective 2.

   ![Image](/images/image_6.png)

   ## Step 1 of 3 - Add a new ***read*** component after the ***Data.read*** component

   - Add a ***read*** component to the ***Data.read*** component
   - Click on the query argument
   - Select the **ECBRates** sheet

   ## Step 2 of 3 - Add a ***set*** component to the output of the ***read*** component (to subtract 1 day from the **EndDate**)

   - Click on the value argument and select the <Simple Expression> option
   - Click on the input argument and select the **EndDate** column
   - Click on the operation argument and select the “Date" option.
   - Click on the operation argument and select the “add" option.
   - Click on the length argument and select the “Number Value” option
   - Type “-1” into the argument
   - Click on the period argument and select the “Day” option
   - Type “EndDate” in the ‘as’ argument
   - Check your results to see non-overlapping date ranges, as below
   ![Image](/images/image_4.png)

   ## Step 3 of 3 - Join the Accounts and Customers data from Exercise 2 to the adjusted ECB Rates data

   - Add a new ***join*** component to the ***remove_columns*** that contains the Account and Customer data that was previously joined together
   - Connect the data from the ***set*** component into the right argument in the ***join*** component
   - Click on the *join_kind* argument and select the “Inner” option
   - Click on the ➕ button (on +)
   - Click on the Equals (default) and select “Between”
   - Click on the *left* argument and select **open_date**
   - Click on the *right_lower* argument and select **StartDate**
   - Click on the *right_upper* argument and select **EndDate**
   ![Image](/images/image_5.png)

   ### **🎉🥳🎈CONGRATULATIONS! You have added the interest rate from the ECBRates sheet to the Accounts and Customer Data!**

   - You used join_between to match rates between two dates! In this case, you added the rate that was in effect at the date that the account was opened. This capability is unique relative to other data preparation platforms.
   - You adjusted a date by subtracting one day to create overlapping ranges. Date arithmetic is possible because the **open_date column** is a **date** type.

   # **Objective 4:**  Final data preparation

   You’ll want to remove unnecessary columns, followed by renaming of Interest Rate and finally the filtering to only “Active” accounts.

   ## Step 1 of 3 - Remove the **StartDate** and **EndDate** columns.

   - Add a ***remove_columns*** component to the ***join*** component that added the ECBRates to the Account and Customer data
   - Choose the **StartDate** and **EndDate** columns
   You should still have 1026 rows with columns: **account_id, open_date, created_date, last_updated_date, active_passive, StartDate, EndDate** and **InterestRate**.

   ## Step 2 of 3 - Rename the **InterestRate** column to **Base Rate**

   - Add a new ***rename_columns*** component after the ***remove_columns*** component
   - Click on the ➕ button (on +)
   - Click on the “account_id” (default 1st column) and select the **InterestRate** column
   - Click on the “New Name” (default) and type “Base Rate” as replacement text

   ## Step 3 of 3 - Filter to the active accounts

   - Add a new ***filter*** component after the ***rename_columns*** component
   - Click on the column argument
   - Select the **active_passive** column. The default argument is ***is_true*** so there is no requirement to enter this, but readability is enhanced by adding this argument
   - Check to see how many rows of data are present in your visualization

   ### 
   ### **You should now have 676 rows with columns: account_id, open_date, created_date, last_updated_date, active_passive, StartDate, EndDate and Base Rate.**
   ![Image](/images/image_7.png)
   ### **🎉🥳🎈CONGRATULATIONS! You have completed Enso Analytics Getting Started!!!**
   - You have now built a solid understanding of how Enso works, its user interface, and our most frequently used components!
main =
    operator1 = "Selecting and Joining Data"



#### METADATA ####
[[{"index":{"value":11389},"size":{"value":28}},"96ab67a9-9096-4751-a2d2-e679f07870d7"]]
{"ide":{"node":{"96ab67a9-9096-4751-a2d2-e679f07870d7":{"position":{"vector":[46,732]}}},"widget":{},"import":{},"snapshot":"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"}}