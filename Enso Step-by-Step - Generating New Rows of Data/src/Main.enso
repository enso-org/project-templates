from Standard.Base import all
from Standard.Table import all
from Standard.Database import all
from Standard.AWS import all
from Standard.Geo import all
from Standard.Google import all
from Standard.Microsoft import all
from Standard.Snowflake import all
from Standard.Tableau import all
import Standard.Examples
import Standard.Visualization



## ---
   icon: group
   ---
   Add 2 date columns that have values close to today
add_date_columns node1 =
    date4 = Date.today
    date6 = date4.date_add 8 ..Day
    node2 = date4.up_to date6
    table12 = node2.to_table
    column1 = table12.get 'Date'
    vector1 = Random.items column1 count=8
    table13 = table12.zip vector1
    table14 = table13.rename_columns [(Pair.Value 'Date' 'JoinDate'), (Pair.Value 'Value' 'PurchaseDate')]
    table15 = node1.zip table14
    table15

## ![Step-by-Step Example](/images/step-by-step-example.png)
   # Generating New Rows of Data in Enso Analytics

   The Generate Rows component in Enso Analytics provides a versatile set of tools for expanding an existing input dataset by adding new rows based on specified criteria, enabling users to simulate data, generate sequences, or create date ranges for analysis, reporting, or visualization. This component leverages options like `Integer_Range`, `Date_Range`, and formula-based row generation, offering flexibility to produce dynamic expansions tailored to column values or calculations. Standalone datasets are created separately using range conversions (e.g., `up_to` with `to_table`), while Enso’s `join_between` option reduces the need for row generation in range-based joins, making this component ideal for data simulation and enrichment.

   ## Key Component

   ### generate_rows

   The `generate_rows` component adds new rows to an existing input dataset based on specified range or formula criteria.

   - **Functionality**: Expands a table by generating rows using `Integer_Range` for numeric sequences, `Date_Range` for date sequences, or formula-based counts, with options to control step size and inclusivity. The new rows are tied to each row in the input dataset, creating a Cartesian-like expansion.
   - **Use Case**: Add 3 static rows per customer for `Authorized_UserNo`, generate daily dates between `accountOpenDate` and `accountClosedDate` for each customer, or produce variable rows based on a calculated increment for a "what-if" analysis.
   - **Benefit**: Offers a powerful way to simulate data, dynamically expand datasets, or test scenarios without manual row creation, enhancing flexibility in data preparation.
   - **Downside**: Over-generation can lead to large datasets, requiring careful management of range limits or step sizes; formula-based generation may introduce complexity or errors if inputs are inconsistent.

   ## Supported Features

   - **Integer Range Generation**: Use `..Integer_Range` to create a sequence of integers (e.g., 1 to 3) for each row in the input dataset.
   - **Variable Row Counts**: Generate rows based on a column value (e.g., `authorized_users`) using `..Integer_Range` for dynamic expansion per row.
   - **Date Range Generation**: Use `..Date_Range` to produce a sequence of dates between two column values (e.g., `accountOpenDate` to `accountClosedDate`) with a specified step (e.g., `..Day`) for each row.
   - **Formula-Based Generation**: Calculate the number of rows to add using expressions (e.g., based on `minValue`, `maxValue`, and `increment`) for advanced simulations per row.
   - **Integration with Enso Ecosystem**: Expanded tables integrate seamlessly with components like `zip`, `set`, `remove_columns`, or visualization tools.
   - **Visualization Support**: Built-in table visualization (accessible via the eyeball icon) allows users to inspect generated rows immediately.

   ## Example Workflow

   In this example workflow, various row generation techniques are applied to expand existing datasets:

   - **Static Integer Values using Integer_Range**: Use `generate_rows` with `..Integer_Range 1 3 True` to add 3 rows per customer with a static `Authorized_UserNo` value.
   - **Generating a Variable Number of Rows using Integer_Range**: Use `generate_rows` with `..Integer_Range 1 (..Name 'authorized_users') True` to add a variable number of rows per customer based on the `authorized_users` column.
   - **Generating Rows for Dates**: Use `generate_rows` with `..Date_Range (..Name 'accountOpenDate') (..Name 'accountClosedDate') True ..Day` to create daily date rows between `accountOpenDate` and `accountClosedDate` for each customer.
   - **Generating Rows using Formula Values**: Use `generate_rows` with a calculated row count based on `((maxValue - minValue) / abs(increment))`, then set a `whatIfTestValue` using the formula `maxValue + (increment * Generated Row)`, and remove temporary columns to simulate a range of values for each row.
   - **Adding Date Columns**: Use a sub-flow (`add_date_columns`) to generate a date range close to today (e.g., 8 days from September 24, 2025), convert it to a table, sample 8 dates, rename columns to `JoinDate` and `PurchaseDate`, and zip with an input dataset to add these columns.

   ## Use Cases

   - **Simulating User Data**: Generate static integer rows to simulate authorized users for testing customer accounts.
   - **Dynamic Expansion**: Create variable rows based on existing data (e.g., `authorized_users`) to model multi-user scenarios.
   - **Date Sequence Creation**: Produce daily date ranges between account open and close dates for time-based analysis per customer.
   - **What-If Analysis**: Use formula-based row generation to simulate value ranges (e.g., `whatIfTestValue`) for scenario planning per row.
   - **Ratable Revenue Recognition**: Generate 12, 24, or 36 rows for each invoice record (e.g., using `..Integer_Range 1 12 True` or a formula based on invoice duration) to distribute revenue evenly over months or other periods for financial reporting.
   - **Adding Contextual Dates**: Append near-current date columns (e.g., `JoinDate`, `PurchaseDate`) to existing data for temporal context using a separate `zip` operation.

   ## Benefits

   The Generate Rows component in Enso Analytics provides a flexible and efficient approach to expanding existing datasets, supporting integer sequences, date ranges, and formula-driven simulations. The `generate_rows` component’s ability to handle static, variable, and calculated row counts enables robust data enrichment, while the `add_date_columns` sub-flow enhances temporal data context. Its integration with other Enso components, such as `zip`, `set`, `remove_columns`, or visualization tools (accessible via the eyeball icon), allows for immediate inspection and further processing. By streamlining row generation and enabling advanced use cases like ratable revenue recognition, this component empowers users to prepare dynamic, analysis-ready datasets in Enso Analytics.
main =
    integer1 = 1
    range1 = integer1.up_to 10 True
    table13 = range1.to_table "Row Count"
    node1 = Table.input [['customer_id', ['1', '2', '3', '4', '5']], ['account_no', ['12032839', '42999715', '67738121', '92992661', '24329200']], ['acc_limit', ['1647', '6189', '5445', '5416', '6765']], ['authorized_users', ['1', '3', '0', '2', '0']], ['accountOpenDate', ['2025-05-28', '2025-11-14', '2025-04-28', '2025-07-07', '2025-07-08']], ['accountClosedDate', ['2025-05-30', '2025-11-20', '2025-05-06', '2025-07-12', '2025-07-11']]]
    ## tatic Integer Values using Integer_Range
    any1 = node1.generate_rows (..Integer_Range 1 3 True) "Authorized_UserNo"
    ## Generating a variable number of rows using Integer_Range
    any2 = node1.generate_rows (..Integer_Range 1 (..Name 'authorized_users') True) "Authorized_UserNo"
    ## Generating rows for dates
    any3 = node1.generate_rows (..Date_Range (..Name 'accountOpenDate') (..Name 'accountClosedDate') True ..Day) "date"
    ## Generating rows using formula values
    node2 = Table.input [['ID', ['1', '2', '3', '4', '5']], ['category', ['A', 'A', 'B', 'A', 'B']], ['minValue', ['10', '10', '3', '70', '2']], ['maxValue', ['50', '10', '6', '110', '3']]]
    table1 = node2.set (expr 'if [category] = \'A\' \nthen \n-10 \nelse if [category] = \'B\' \nthen \n-1  \nelse 0') "increment"
    table3 = table1.set (expr 'floor(([maxValue]-[minValue]) /(abs([increment])))') "rows to add"
    any5 = table3.generate_rows (..Integer_Range 0 (..Name 'rows to add') True 1)
    table4 = any5.set (expr '[maxValue] + ([increment] * [Generated Row])') "whatIfTestValue"
    table5 = table4.remove_columns ['increment', 'rows to add', 'Generated Row']
    text1 = "Generate Rows as a standalone dataset"
    text2 = "Generate rows with an input dataset using the generate_rows component"
    text3 = "Advanced Example"



#### METADATA ####
[[{"index":{"value":446},"size":{"value":5}},"7a6b6a07-a6ed-48d8-bb23-d7028be09ba5"],[{"index":{"value":466},"size":{"value":10}},"646985dc-ac5f-4821-8d5a-8861bf904ff8"],[{"index":{"value":489},"size":{"value":22}},"8f6cef0d-c331-4557-8ba9-adb612b4329c"],[{"index":{"value":524},"size":{"value":17}},"3350d1b6-464f-450d-8871-909cdfbc7c26"],[{"index":{"value":556},"size":{"value":14}},"3addd758-8a24-4e7f-aced-70da03f75997"],[{"index":{"value":585},"size":{"value":18}},"b1d9d53e-247f-4bbe-9147-1b463b73c0b1"],[{"index":{"value":618},"size":{"value":28}},"01af9746-4b49-4aaf-99a6-4a065f7f1974"],[{"index":{"value":661},"size":{"value":19}},"88cd9951-89f4-47fb-b178-eaca2120da87"],[{"index":{"value":695},"size":{"value":92}},"dd996f45-9436-494d-a22a-9ff74dba588d"],[{"index":{"value":802},"size":{"value":9}},"6c11c15f-71fa-4c52-af14-38b2451209e0"],[{"index":{"value":802},"size":{"value":17}},"8624f581-3bdf-4d2c-9cfb-9573778e0f62"],[{"index":{"value":824},"size":{"value":7}},"a0e973bd-a5d6-44e9-9b5d-d935cdc975bd"],[{"index":{"value":6968},"size":{"value":1}},"fdc54d60-5783-4eb9-b634-2063d74c33ba"],[{"index":{"value":6983},"size":{"value":14}},"f8c72ae3-bbd1-45e7-941a-c35e05e55942"],[{"index":{"value":6983},"size":{"value":17}},"72535b45-bef2-4a85-aafa-36e2746486a7"],[{"index":{"value":6983},"size":{"value":22}},"fd8ca11d-2a41-43fd-b020-46b14bcc8b17"],[{"index":{"value":7020},"size":{"value":15}},"d890467a-acfc-40cf-b54c-01bec4054c2f"],[{"index":{"value":7020},"size":{"value":27}},"a06c8256-ee7c-407d-84c2-7191deda0f9a"],[{"index":{"value":7060},"size":{"value":428}},"0b075388-f516-4910-9b04-1f838ae92554"],[{"index":{"value":7548},"size":{"value":19}},"bcd6eb0c-b3c8-4dc6-9bde-99ba7a196864"],[{"index":{"value":7548},"size":{"value":46}},"d5718c4a-19c1-4b07-8581-4ae482dccaf2"],[{"index":{"value":7548},"size":{"value":66}},"76916baa-ac48-408a-9e8f-6347b8c0c041"],[{"index":{"value":7690},"size":{"value":19}},"5b9ff823-d0e5-489c-b417-118b40bd7d3e"],[{"index":{"value":7690},"size":{"value":72}},"084d2ac9-ad5d-4038-ab25-3f5fbbb6de14"],[{"index":{"value":7690},"size":{"value":92}},"9296d490-9c6f-47c4-a589-a0895555ce2c"],[{"index":{"value":7827},"size":{"value":19}},"35f0de7c-097a-4c43-bf09-5b638f0149ec"],[{"index":{"value":7827},"size":{"value":101}},"b595d7e8-b969-4bbc-8e95-aca1fab4c641"],[{"index":{"value":7827},"size":{"value":108}},"8ac8efd7-5a1a-4906-9ed8-d62b9ac3b03e"],[{"index":{"value":7992},"size":{"value":177}},"2da69aae-cd82-4097-bdad-7517441d5d9d"],[{"index":{"value":8183},"size":{"value":9}},"145bcb49-bfc1-43f4-8c6d-cb09994ca7f1"],[{"index":{"value":8183},"size":{"value":104}},"b1e27c2c-dd26-46e7-9031-90ce1fbb14da"],[{"index":{"value":8183},"size":{"value":116}},"6fdbe6a7-7267-4403-8e2b-9d24e7b4617d"],[{"index":{"value":8313},"size":{"value":10}},"dc14b032-5298-44ea-9105-3be2cfe57ba1"],[{"index":{"value":8313},"size":{"value":70}},"724e7997-e601-4ee8-8d23-a03a152c4d17"],[{"index":{"value":8313},"size":{"value":84}},"e4d3e5e3-4a5b-404b-99cb-d6441fa43e85"],[{"index":{"value":8409},"size":{"value":20}},"2b482c06-5be2-4de6-b81e-6078476c0823"],[{"index":{"value":8409},"size":{"value":70}},"d580863b-0d51-42f7-b2a1-17101b3dfae2"],[{"index":{"value":8493},"size":{"value":8}},"5b0ecd9a-102e-42e3-be46-39c54a4ddd58"],[{"index":{"value":8493},"size":{"value":62}},"abc6e683-34f2-46b7-ac87-1ff8dde6d203"],[{"index":{"value":8493},"size":{"value":80}},"e48297a2-e85d-4fc1-bf65-57993986d4e3"],[{"index":{"value":8587},"size":{"value":21}},"b5683f6b-9c05-4fc2-bbe8-036b38bb545c"],[{"index":{"value":8587},"size":{"value":67}},"8e19ee25-3eed-497d-83cb-b262c87150cc"],[{"index":{"value":8667},"size":{"value":39}},"8356fa32-a4c1-48e0-b9b1-e67d732c4f1e"],[{"index":{"value":8719},"size":{"value":71}},"65a2da4b-8976-4985-879c-22ae10e506c8"],[{"index":{"value":8803},"size":{"value":18}},"adbf2040-d092-486f-b535-d0a0e13b5725"]]
{"ide":{"node":{"7a6b6a07-a6ed-48d8-bb23-d7028be09ba5":{"position":{"vector":[-1024,721]}},"646985dc-ac5f-4821-8d5a-8861bf904ff8":{"position":{"vector":[-876,649]}},"8f6cef0d-c331-4557-8ba9-adb612b4329c":{"position":{"vector":[-765,514]}},"3350d1b6-464f-450d-8871-909cdfbc7c26":{"position":{"vector":[-848,421]}},"3addd758-8a24-4e7f-aced-70da03f75997":{"position":{"vector":[-826,349]},"visualization":{"show":true,"width":502.81198641202724,"height":264.3352446391665}},"b1d9d53e-247f-4bbe-9147-1b463b73c0b1":{"position":{"vector":[-683,13]}},"01af9746-4b49-4aaf-99a6-4a065f7f1974":{"position":{"vector":[-592,-50]},"visualization":{"show":true,"height":326.72607421875}},"88cd9951-89f4-47fb-b178-eaca2120da87":{"position":{"vector":[-814,-456]}},"dd996f45-9436-494d-a22a-9ff74dba588d":{"position":{"vector":[-814,-537]}},"8624f581-3bdf-4d2c-9cfb-9573778e0f62":{"position":{"vector":[-1024,-642]}},"6c11c15f-71fa-4c52-af14-38b2451209e0":{"position":{"vector":[-1024,-642]}},"a0e973bd-a5d6-44e9-9b5d-d935cdc975bd":{"position":{"vector":[-1024,-714]}},"fdc54d60-5783-4eb9-b634-2063d74c33ba":{"position":{"vector":[-605,666]}},"fd8ca11d-2a41-43fd-b020-46b14bcc8b17":{"position":{"vector":[-605,591]}},"72535b45-bef2-4a85-aafa-36e2746486a7":{"position":{"vector":[1030,1457]}},"f8c72ae3-bbd1-45e7-941a-c35e05e55942":{"position":{"vector":[1030,1451]}},"a06c8256-ee7c-407d-84c2-7191deda0f9a":{"position":{"vector":[-605,510]},"visualization":{"show":true,"width":580.8911495074358,"height":352.5632565105505}},"d890467a-acfc-40cf-b54c-01bec4054c2f":{"position":{"vector":[1030,1376]},"visualization":{"show":true,"width":422.51283879098673,"height":239.05179534220483}},"0b075388-f516-4910-9b04-1f838ae92554":{"position":{"vector":[186,639]}},"76916baa-ac48-408a-9e8f-6347b8c0c041":{"position":{"vector":[186,419]},"visualization":{"show":true,"width":1494.9724934895833,"height":238.74332682291666}},"d5718c4a-19c1-4b07-8581-4ae482dccaf2":{"position":{"vector":[127,485]},"visualization":{"show":true,"width":1494.9724934895833,"height":238.74332682291666}},"bcd6eb0c-b3c8-4dc6-9bde-99ba7a196864":{"position":{"vector":[127,485]}},"9296d490-9c6f-47c4-a589-a0895555ce2c":{"position":{"vector":[186,108]},"visualization":{"show":true,"width":1442.9025065104167,"height":228.62138819342823}},"084d2ac9-ad5d-4038-ab25-3f5fbbb6de14":{"position":{"vector":[146,45]}},"5b9ff823-d0e5-489c-b417-118b40bd7d3e":{"position":{"vector":[146,46]}},"8ac8efd7-5a1a-4906-9ed8-d62b9ac3b03e":{"position":{"vector":[186,-217]},"visualization":{"show":true,"width":1415.6214192708333,"height":224.356201171875}},"b595d7e8-b969-4bbc-8e95-aca1fab4c641":{"position":{"vector":[175,-417]}},"35f0de7c-097a-4c43-bf09-5b638f0149ec":{"position":{"vector":[175,-417]}},"2da69aae-cd82-4097-bdad-7517441d5d9d":{"position":{"vector":[1901,666]}},"6fdbe6a7-7267-4403-8e2b-9d24e7b4617d":{"position":{"vector":[1901,468]},"visualization":{"show":false,"width":1240.465576171875}},"b1e27c2c-dd26-46e7-9031-90ce1fbb14da":{"position":{"vector":[19,-1004]}},"145bcb49-bfc1-43f4-8c6d-cb09994ca7f1":{"position":{"vector":[19,-1004]}},"e4d3e5e3-4a5b-404b-99cb-d6441fa43e85":{"position":{"vector":[1901,301]},"visualization":{"show":false,"width":869.86279296875,"height":285.8750813802083}},"724e7997-e601-4ee8-8d23-a03a152c4d17":{"position":{"vector":[911,-1616]},"visualization":{"show":true,"width":869.86279296875,"height":285.8750813802083}},"dc14b032-5298-44ea-9105-3be2cfe57ba1":{"position":{"vector":[911,-1622]}},"d580863b-0d51-42f7-b2a1-17101b3dfae2":{"position":{"vector":[1901,229]},"visualization":{"show":false,"width":1308.3614501953125,"height":299.95684814453125}},"2b482c06-5be2-4de6-b81e-6078476c0823":{"position":{"vector":[781,-2021]}},"e48297a2-e85d-4fc1-bf65-57993986d4e3":{"position":{"vector":[1901,157]},"visualization":{"show":false,"width":1468.8193359375,"height":352.45050048828125}},"abc6e683-34f2-46b7-ac87-1ff8dde6d203":{"position":{"vector":[-238,-1576]}},"5b0ecd9a-102e-42e3-be46-39c54a4ddd58":{"position":{"vector":[-238,-1576]}},"8e19ee25-3eed-497d-83cb-b262c87150cc":{"position":{"vector":[1901,85]},"visualization":{"show":true,"width":860.2058715820312,"height":470.9989013671875}},"b5683f6b-9c05-4fc2-bbe8-036b38bb545c":{"position":{"vector":[-146,-2028]}},"8356fa32-a4c1-48e0-b9b1-e67d732c4f1e":{"position":{"vector":[-605,711]}},"65a2da4b-8976-4985-879c-22ae10e506c8":{"position":{"vector":[186,711]}},"adbf2040-d092-486f-b535-d0a0e13b5725":{"position":{"vector":[1901,738]}}},"widget":{"0b075388-f516-4910-9b04-1f838ae92554":{"WidgetTableEditor":{"size":{"x":1352.7055171054537,"y":143.4600058945005}}},"2da69aae-cd82-4097-bdad-7517441d5d9d":{"WidgetTableEditor":{"size":{"x":906.0628255208333,"y":150}}}},"import":{},"snapshot":"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"}}