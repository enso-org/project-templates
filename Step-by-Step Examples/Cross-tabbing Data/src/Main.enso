from Standard.Base import all
from Standard.Table import all
from Standard.Database import all
from Standard.AWS import all
from Standard.Geo import all
from Standard.Google import all
from Standard.Microsoft import all
from Standard.Snowflake import all
from Standard.Tableau import all
import Standard.Examples
import Standard.Visualization
from Standard.Base.Meta import Enso_Project





## ![image](/images/step-by-step-example.png)
   # Cross-tabbing Data in Enso Analytics

   The cross_tab component in Enso Analytics is a powerful tool for creating pivot tables by grouping data and spreading values across new columns, enabling users to summarize and reorganize datasets for analysis, reporting, or visualization. This component is particularly useful for aggregating data by categories, such as summing sales by product type or listing personnel by role, and is ideal for transforming long-format data into a wide format. Paired with the transpose component, which can reverse the transformation by converting columns back into rows, cross_tab provides flexible data reshaping capabilities. While cross_tab simplifies complex aggregations, users may need additional steps to handle null values or reorder columns for optimal presentation.

   ![image](/images/crosstab.png)
   ## Key Component

   ### cross_tab

   The cross_tab component restructures a table by grouping rows based on specified key columns, creating new columns from unique values in a designated column, and populating them with aggregated values from another column.

   - **Functionality**: Groups data by one or more key columns, uses a "names" column to define new column headers, and applies an aggregation function (e.g., ..Sum, ..Concatenate, ..First) to a value column to populate the new columns. Users can specify the key columns, names column, and aggregation method, with options to handle nulls or customize output.
   - **Use Case**: Transform a dataset of US Presidents and Vice Presidents by grouping on President Number, using Pres or VP to create columns for "President" and "Vice President", and concatenating names to list all Vice Presidents per President. Alternatively, sum total sales by Category and Suggested Age Range to create a pivot table of sales figures.
   - **Benefit**: Simplifies the creation of pivot tables, enabling users to summarize data by categories and visualize relationships in a compact, wide-format table.
   - **Downside**: The resulting table may include nulls for non-matching combinations, requiring additional steps like fill_nothing or reorder_columns to refine the output. Column order may also need adjustment, as cross_tab does not guarantee a specific order.

   ## Supported Features

   - **Flexible Key Column Selection**: Users can specify one or more key columns to group data, allowing tailored pivot tables based on specific attributes.
   - **Customizable Column Creation**: The "names" column defines new column headers, and the aggregation function (e.g., ..Sum, ..Concatenate, ..First) determines how values are summarized.
   - **Multiple Aggregation Methods**: Supports various aggregations, such as summing numeric values, concatenating text, or selecting the first value, to accommodate different data types and use cases.
   - **Handling Null Values**: Nulls (Nothing) in the output can be managed with fill_nothing to replace them with default values (e.g., 0 for integers).
   - **Inverse Operation with Transpose**: The transpose component can reverse the cross-tab operation, converting wide-format data back into a long, key-value format for further analysis.
   - **Integration with Enso Ecosystem**: Cross-tabbed tables integrate seamlessly with other Enso components, such as filter, sort, rename_columns, or visualization tools, for additional processing or inspection.
   - **Visualization Support**: Built-in table visualization (accessible via the eyeball icon) allows users to inspect cross-tab results immediately.

   ## Example Workflow

   In this example workflow, the cross_tab component is used to reshape datasets for analysis:

   - **Basic Cross-tab with Concatenation**: Start with a table of US Presidents and Vice Presidents containing President Number, VP Number, Pres or VP, Name, Start_Date, and End_Date. Use cross_tab ['President Number'] 'Pres or VP' (..Concatenate 'Name' separator=', ') to group by President Number, create columns for "President" and "Vice President", and concatenate names (e.g., listing Aaron Burr and George Clinton for Thomas Jefferson). Apply reorder_columns and sort to organize the output.
   - **Cross-tab with Sequential Values**: Fill nulls in VP Number with 0 using fill_nothing, then use cross_tab ['President Number'] names='VP Number' (..First 'Name') to create columns for each Vice President in order (e.g., "President", "VP 1", "VP 2", "VP 3"). Rename columns for clarity (e.g., 0 to "President", 1 to "VP 1") and reorder/sort for presentation.
   - **Cross-tab for Sales Data**: Start with a sales dataset containing Product, Category, Suggested Age Range, and Total Sales. Use cross_tab ['Category'] 'Suggested Age Range' (..Sum 'Total Sales') to create a pivot table summing sales by Category and Suggested Age Range (e.g., columns for "7+", "13+", "All ages"). Use fill_nothing to replace nulls with 0 for cleaner output.
   - **Combining with Other Operations**: Apply select_columns before cross-tabbing to focus on specific columns, or use rename_columns and reorder_columns afterward to customize the output structure for reporting or visualization.

   ## Use Cases

   - **Summarizing Personnel Data**: Create a pivot table to list Presidents and their Vice Presidents by term, grouping by President Number and concatenating names for easy reference.
   - **Aggregating Sales Data**: Sum sales by product category and age range to identify trends or performance across market segments.
   - **Preparing for Visualization**: Generate a wide-format table with aggregated values (e.g., sales by category and age) for creating heatmaps or bar charts.
   - **Data Exploration**: Cross-tab data to explore relationships between categories, such as grouping employee roles by department to analyze staffing patterns.
   - **Integration with Other Workflows**: Use cross-tabbed data as input for joins, filters, or further aggregations in Enso workflows.

   ## Benefits

   The cross_tab component in Enso Analytics provides an intuitive and flexible way to create pivot tables, enabling users to summarize and reorganize data into a wide format for analysis and visualization. Its support for multiple aggregation methods, customizable column creation, and integration with key columns makes it versatile for various datasets and use cases. When paired with transpose, it supports reversible transformations, allowing users to switch between wide and long formats as needed. Seamless integration with other Enso components, such as fill_nothing, sort, rename_columns, or visualization tools (accessible via the eyeball icon), enhances its utility for data preparation and exploration. However, users should be aware that additional steps, like handling nulls or reordering columns, may be required to achieve the desired output structure. By simplifying pivot table creation, cross_tab empowers users to efficiently analyze and present data in Enso Analytics.
main =
    ## List of US Presidents and Vice Presidents
    node3 = Table.input [['President Number', ['1', '1', '2', '2', '3', '3', '3', '4', '4', '5', '5', '6', '6', '7', '7', '7', '8', '8', '9', '9', '10', '11', '11', '12', '12', '13', '14', '14', '15', '15', '16', '16', '16', '17', '18', '18', '18', '19', '19', '20', '20', '21', '22', '22', '23', '23', '24', '24', '25', '25', '25', '26', '26', '27', '27', '28', '28', '29', '29', '30', '30', '31', '31', '32', '32', '32', '32', '33', '33', '34', '34', '35', '35', '36', '36', '37', '37', '37', '38', '38', '39', '39', '40', '40', '41', '41', '42', '42', '43', '43', '44', '44', '45', '45', '46', '46', '47', '47']], ['VP Number', [Nothing, '1', Nothing, '1', Nothing, '1', '2', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', '2', Nothing, '1', Nothing, '1', Nothing, Nothing, '1', Nothing, '1', Nothing, Nothing, '1', Nothing, '1', Nothing, '1', '2', Nothing, Nothing, '1', '2', Nothing, '1', Nothing, '1', Nothing, Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', '2', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', '2', '3', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', '2', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1', Nothing, '1']], ['Pres or VP', ['President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'Vice President', 'President', 'President', 'Vice President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'Vice President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President', 'President', 'Vice President']], ['Name', ['George Washington', 'John Adams', 'John Adams', 'Thomas Jefferson', 'Thomas Jefferson', 'Aaron Burr', 'George Clinton', 'James Madison', 'Elbridge Gerry', 'James Monroe', 'Daniel D. Tompkins', 'John Quincy Adams', 'John C. Calhoun', 'Andrew Jackson', 'John C. Calhoun', 'Martin Van Buren', 'Martin Van Buren', 'Richard Mentor Johnson', 'William Henry Harrison', 'John Tyler', 'John Tyler', 'James K. Polk', 'George M. Dallas', 'Zachary Taylor', 'Millard Fillmore', 'Millard Fillmore', 'Franklin Pierce', 'William R. King', 'James Buchanan', 'John C. Breckinridge', 'Abraham Lincoln', 'Hannibal Hamlin', 'Andrew Johnson', 'Andrew Johnson', 'Ulysses S. Grant', 'Schuyler Colfax', 'Henry Wilson', 'Rutherford B. Hayes', 'William A. Wheeler', 'James A. Garfield', 'Chester A. Arthur', 'Chester A. Arthur', 'Grover Cleveland', 'Thomas A. Hendricks', 'Benjamin Harrison', 'Levi P. Morton', 'Grover Cleveland', 'Adlai E. Stevenson', 'William McKinley', 'Garret A. Hobart', 'Theodore Roosevelt', 'Theodore Roosevelt', 'Charles W. Fairbanks', 'William Howard Taft', 'James S. Sherman', 'Woodrow Wilson', 'Thomas R. Marshall', 'Warren G. Harding', 'Calvin Coolidge', 'Calvin Coolidge', 'Charles G. Dawes', 'Herbert Hoover', 'Charles Curtis', 'Franklin D. Roosevelt', 'John Nance Garner', 'Henry A. Wallace', 'Harry S. Truman', 'Harry S. Truman', 'Alben W. Barkley', 'Dwight D. Eisenhower', 'Richard Nixon', 'John F. Kennedy', 'Lyndon B. Johnson', 'Lyndon B. Johnson', 'Hubert Humphrey', 'Richard Nixon', 'Spiro Agnew', 'Gerald Ford', 'Gerald Ford', 'Nelson Rockefeller', 'Jimmy Carter', 'Walter Mondale', 'Ronald Reagan', 'George H. W. Bush', 'George H. W. Bush', 'Dan Quayle', 'Bill Clinton', 'Al Gore', 'George W. Bush', 'Dick Cheney', 'Barack Obama', 'Joe Biden', 'Donald Trump', 'Mike Pence', 'Joe Biden', 'Kamala Harris', 'Donald Trump', 'J.D. Vance']], ['Start_Date', ['1789-04-30', '1789-04-30', '1797-03-04', '1797-03-04', '1801-03-04', '1801-03-04', '1805-03-04', '1809-03-04', '1813-03-04', '1817-03-04', '1817-03-04', '1825-03-04', '1825-03-04', '1829-03-04', '1829-03-04', '1833-03-04', '1837-03-04', '1837-03-04', '1841-03-04', '1841-03-04', '1841-04-04', '1845-03-04', '1845-03-04', '1849-03-04', '1849-03-04', '1850-07-09', '1853-03-04', '1853-03-04', '1857-03-04', '1857-03-04', '1861-03-04', '1861-03-04', '1865-03-04', '1865-04-15', '1869-03-04', '1869-03-04', '1873-03-04', '1877-03-04', '1877-03-04', '1881-03-04', '1881-03-04', '1881-09-19', '1885-03-04', '1885-03-04', '1889-03-04', '1889-03-04', '1893-03-04', '1893-03-04', '1897-03-04', '1897-03-04', '1901-03-04', '1901-09-14', '1905-03-04', '1909-03-04', '1909-03-04', '1913-03-04', '1913-03-04', '1921-03-04', '1921-03-04', '1923-08-02', '1925-03-04', '1929-03-04', '1929-03-04', '1933-03-04', '1933-03-04', '1941-01-20', '1945-01-20', '1945-04-12', '1949-01-20', '1953-01-20', '1953-01-20', '1961-01-20', '1961-01-20', '1963-11-22', '1965-01-20', '1969-01-20', '1969-01-20', '1973-12-06', '1974-08-09', '1974-12-19', '1977-01-20', '1977-01-20', '1981-01-20', '1981-01-20', '1989-01-20', '1989-01-20', '1993-01-20', '1993-01-20', '2001-01-20', '2001-01-20', '2009-01-20', '2009-01-20', '2017-01-20', '2017-01-20', '2021-01-20', '2021-01-20', '2025-01-20', '2025-01-20']], ['End_Date', ['1797-03-04', '1797-03-04', '1801-03-04', '1801-03-04', '1809-03-04', '1805-03-04', '1809-03-04', '1817-03-04', '1814-11-23', '1825-03-04', '1825-03-04', '1829-03-04', '1832-12-28', '1837-03-04', '1832-12-28', '1837-03-04', '1841-03-04', '1841-03-04', '1841-04-04', '1841-04-04', '1845-03-04', '1849-03-04', '1849-03-04', '1850-07-09', '1850-07-09', '1853-03-04', '1857-03-04', '1853-04-18', '1861-03-04', '1861-03-04', '1865-04-15', '1865-03-04', '1865-04-15', '1869-03-04', '1877-03-04', '1873-03-04', '1875-11-22', '1881-03-04', '1881-03-04', '1881-09-19', '1881-09-19', '1885-03-04', '1889-03-04', '1885-11-25', '1893-03-04', '1893-03-04', '1897-03-04', '1897-03-04', '1901-09-14', '1899-11-21', '1901-09-14', '1909-03-04', '1909-03-04', '1913-03-04', '1912-10-30', '1921-03-04', '1921-03-04', '1923-08-02', '1923-08-02', '1929-03-04', '1929-03-04', '1933-03-04', '1933-03-04', '1945-04-12', '1941-01-20', '1945-01-20', '1945-04-12', '1953-01-20', '1953-01-20', '1961-01-20', '1961-01-20', '1963-11-22', '1963-11-22', '1969-01-20', '1969-01-20', '1974-08-09', '1973-10-10', '1974-08-09', '1977-01-20', '1977-01-20', '1981-01-20', '1981-01-20', '1989-01-20', '1989-01-20', '1993-01-20', '1993-01-20', '2001-01-20', '2001-01-20', '2009-01-20', '2009-01-20', '2017-01-20', '2017-01-20', '2021-01-20', '2021-01-20', '2025-01-20', '2025-01-20', '2029-01-20', '2029-01-20']]]
    ## Basic Crosstab - Group Data for each president number. Names column is Pres or VP which will give us 2 columns, President and Vice President. Concatenate all of the values of the name. Presidents only have one value, but some presidents had multiple Vice Presidents, such as Thomas Jefferson, who had Aaron Burr and George Clinton.
    table16 = node3.cross_tab ['President Number'] 'Pres or VP' (..Concatenate 'Name' separator=', ')
    table17 = table16.reorder_columns ['Vice President'] ..After_Other_Columns
    table18 = table17.sort [(..Name 'President Number' ..Ascending), (..Name 'President Number')]
    table19 = node3.fill_nothing ['VP Number'] 0
    ## Cross-tab adding a column for each Vice President in order during the term of the president
    table20 = table19.cross_tab ['President Number'] names='VP Number' (..First 'Name')
    table21 = table20.rename_columns [(Pair.Value '0' 'President'), (Pair.Value '1' 'VP 1'), (Pair.Value '2' 'VP 2'), (Pair.Value '3' 'VP 3')]
    table22 = table21.reorder_columns ['President Number', 'President', 'VP 1', 'VP 2', 'VP 3']
    table23 = table22.sort [(..Name 'President Number' ..Ascending)]
    node5 = Table.input [['Product', ['Laptops', 'Tablets', 'Gaming Consoles', 'External Hard Drives', 'Bluetooth Speakers', 'Smartwatches', 'Headphones', '4K Televisions', 'Smartphones', 'Digital Cameras']], ['Category', ['Computers', 'Mobile Devices', 'Gaming', 'Storage', 'Audio', 'Wearables', 'Audio', 'Home Entertainment', 'Mobile Devices', 'Cameras']], ['Suggested Age Range', ['13+', '7+', '7+', '13+', 'All ages', '13+', 'All ages', 'All ages', '13+', 'All ages']], ['Total Sales', ['966501', '1394351', '953905', '800057', '889465', '1298167', '1059937', '1094831', '1176730', '1270696']]]
    ## Crosstab Total Sales by category and suggested age range
    table24 = node5.cross_tab ['Category'] 'Suggested Age Range' (..Sum 'Total Sales')
    table25 = table24.fill_nothing [(..By_Type ..Integer)] 0



#### METADATA ####
[[{"index":{"value":7456},"size":{"value":7484}},"03e2f9df-5be1-4261-8c29-5d47c540f782"],[{"index":{"value":15294},"size":{"value":87}},"26fbc4c5-6678-4e55-a41e-eb7c74cda9e6"],[{"index":{"value":15396},"size":{"value":64}},"2e17f9dc-c162-404d-a4db-26616791a0da"],[{"index":{"value":15475},"size":{"value":83}},"119e9738-e8b8-436f-be62-d1e45d387cf1"],[{"index":{"value":15573},"size":{"value":34}},"9619bbe3-bca6-4347-a559-99cf02d67e16"],[{"index":{"value":15721},"size":{"value":73}},"31361b63-c559-4aa2-9484-df1e3595cdd3"],[{"index":{"value":15809},"size":{"value":128}},"967b5a90-7608-47b8-9163-7dd2edfbdfd4"],[{"index":{"value":15952},"size":{"value":81}},"b5630c49-d0d8-4fcd-8adb-28be91c020cd"],[{"index":{"value":16048},"size":{"value":54}},"1dee4476-92ca-44b4-a34e-a4c50ee37b5b"],[{"index":{"value":16115},"size":{"value":586}},"78d459b6-18e8-4ddd-a6ae-6977fd9050fd"],[{"index":{"value":16780},"size":{"value":72}},"449f3d03-c463-48f6-b569-6ef6c527a7f6"],[{"index":{"value":16867},"size":{"value":46}},"7f4c7fd4-f77d-4956-966c-844be8a54147"]]
{"ide":{"node":{"03e2f9df-5be1-4261-8c29-5d47c540f782":{"position":{"vector":[-3323,4159]}},"26fbc4c5-6678-4e55-a41e-eb7c74cda9e6":{"position":{"vector":[-3127,3866]},"visualization":{"show":false,"width":1581.9977213541667,"height":513.55078125}},"2e17f9dc-c162-404d-a4db-26616791a0da":{"position":{"vector":[-3127,3794]},"visualization":{"show":false,"width":937.8642578125,"height":197.47403971354166}},"119e9738-e8b8-436f-be62-d1e45d387cf1":{"position":{"vector":[-3127,3722]},"visualization":{"show":true,"width":1002.0045572916666}},"9619bbe3-bca6-4347-a559-99cf02d67e16":{"position":{"vector":[-3295,3459]}},"31361b63-c559-4aa2-9484-df1e3595cdd3":{"position":{"vector":[-3295,3360]}},"967b5a90-7608-47b8-9163-7dd2edfbdfd4":{"position":{"vector":[-3295,3287]}},"b5630c49-d0d8-4fcd-8adb-28be91c020cd":{"position":{"vector":[-3295,3206]}},"1dee4476-92ca-44b4-a34e-a4c50ee37b5b":{"position":{"vector":[-3295,3125]},"visualization":{"show":true,"width":1360.07275390625}},"78d459b6-18e8-4ddd-a6ae-6977fd9050fd":{"position":{"vector":[-3295,2875]}},"449f3d03-c463-48f6-b569-6ef6c527a7f6":{"position":{"vector":[-3273,2651]},"visualization":{"show":true,"width":1169.5990846548507,"height":288.86263263759326}},"7f4c7fd4-f77d-4956-966c-844be8a54147":{"position":{"vector":[-3270,2268]},"visualization":{"show":true,"width":1141.3262921233675,"height":187.64420694379663}}},"widget":{"03e2f9df-5be1-4261-8c29-5d47c540f782":{"WidgetTableEditor":{"size":{"x":1048.747230832489,"y":150}}},"78d459b6-18e8-4ddd-a6ae-6977fd9050fd":{"WidgetTableEditor":{"size":{"x":1170.9691957635337,"y":150}}}},"snapshot":"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","import":{}}}