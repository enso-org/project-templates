from Standard.Base import all
from Standard.Table import all
from Standard.Database import all
from Standard.AWS import all
from Standard.Geo import all
from Standard.Google import all
from Standard.Microsoft import all
from Standard.Snowflake import all
from Standard.Tableau import all
import Standard.Examples
import Standard.Visualization

## ![image](/images/step-by-step-example.png)
   # Reading Data from Web APIs in Enso Analytics

   The Web Data Input components in Enso Analytics provide a robust set of tools for importing data from Web APIs into a unified table format, enabling users to fetch real-time or external data for analysis, reporting, or visualization. This example focuses on Web API data input using components such as `Data.fetch`, `Data.fetch_many`, `URI.parse`, and `Data.download`, offering flexible options for constructing API requests, handling query arguments, headers, downloading files, and transforming responses into structured tables. Enso's ability to read from file-based formats and databases will be covered in separate examples. Note that while not shown, API keys can be passed in as plaintext or securely as an Enso Secret, which is saved in the Enso Cloud for enhanced security. Additionally, in Enso Analytics, any time data is written—whether to a file, database, or posted to a Web API—a user must explicitly tell the component to write the data. This can be done by clicking the Write All button at the top of the canvas, which looks like a play button, or by choosing "Write" from an individual component's quarter circle menu.

   ## Key Components

   ### Data.fetch

   The `Data.fetch` component retrieves data from a Web API endpoint and converts it into a table format.

   - **Functionality**: Sends a request (e.g., `..Get`) to a specified URL, supporting hardcoded or constructed URIs, and returns the response (e.g., JSON or CSV) as a table using `to_table`. API keys can be included as plaintext in the URL or securely via an Enso Secret.
   - **Use Case**: Fetch age data from `https://api.agify.io?name=alex` to get a JSON object with `count`, `name`, and `age`, or retrieve CSV data directly from a Web URL.
   - **Benefit**: Simplifies single API requests with automatic response-to-table conversion, offering secure API key management options.

   ### Data.fetch_many

   The `Data.fetch_many` component retrieves data from multiple Web API endpoints concurrently and combines the results into a single table.

   - **Functionality**: Takes a table of URLs (e.g., generated from a column) and sends requests (e.g., `..Get`) to each, with an option to set a `time_between_requests` delay, returning a unified table. API keys can be passed as plaintext or securely via an Enso Secret.
   - **Use Case**: Fetch age data for a list of names (e.g., `Ned`, `Chase`) by constructing URLs and processing them with a 10-second delay between requests.
   - **Benefit**: Efficiently handles batch API calls, supporting rate-limited APIs and consolidating results with secure key handling.

   ### URI.parse

   The `URI.parse` component constructs and manipulates Web API request URLs.

   - **Functionality**: Parses a base URL and allows adding query arguments (e.g., `lat`, `lng`, `place`) or headers (e.g., `accept`, `x-requested-with`) to build a complete request URI. API keys can be added as query parameters or headers, either in plaintext or via an Enso Secret.
   - **Use Case**: Build a Starbucks API request by starting with `https://www.starbucks.com/apiproxy/v1/locations` and adding coordinates and headers for a specific location.
   - **Benefit**: Provides a structured way to create dynamic API requests, enhancing flexibility and reusability with secure key options.

   ### Data.download

   The `Data.download` component retrieves a file from a Web URL and saves it to a specified local or cloud location.

   - **Functionality**: Downloads a file (e.g., CSV) from a URL using a `..Get` request, saving it to a target path (e.g., `data/WB_WDI_SL_GDP_PCAP_EM_KD.csv`) with an `..Always` option to overwrite existing files, and supports subsequent reading with `read`. A user must explicitly tell Enso to write the data by clicking the Write All button at the top of the canvas or selecting "Write" from the component's quarter circle menu, as they will be prompted with this message.
   - **Use Case**: Download a World Bank GDP dataset from `https://data360files.worldbank.org/data360-data/data/WB_WDI/WB_WDI_SL_GDP_PCAP_EM_KD.csv` and read it into a table for analysis.
   - **Benefit**: Enables offline access to Web data by saving files locally or to the Enso Cloud, with explicit write control ensuring data persistence.

   ## Supported Data Sources

   - **Web APIs**: Enso supports data retrieval from RESTful endpoints or other API sources, handling JSON and CSV responses for real-time data integration.
   - **Files**: Enso supports reading from file formats like CSV and Excel (covered in separate examples).
   - **Databases**: Enso can connect to and read from various databases (e.g., SQL Server, PostgreSQL, Snowflake) using appropriate connection parameters (covered in separate examples).

   ## Example Workflow

   In this example workflow, data is fetched from Web APIs and processed into tables:

   - **Simple API Request**: Use `Data.fetch` with `..Get` to request `https://api.agify.io?name=alex`, converting the JSON response to a table with `count`, `name`, and `age`, noting a 100-lookup daily limit with a 429 error if exceeded.
   - **Dynamic URL Construction**: Use `URI.parse` to create a base URL (`https://api.agify.io`), add a query argument `name=John`, and fetch with `..Get` to get age data for "John", subject to the same limit.
   - **Batch API Requests**: Use `Table.input` to create a list of names, generate URLs with `set`, select them with `select_columns`, and use `Data.fetch_many` with `..Get` and a 10-second delay to fetch age data for each name, respecting the limit.
   - **Complex API Request with Headers**: Use `URI.parse` to build `https://www.starbucks.com/apiproxy/v1/locations` with query arguments `lat=33.599184`, `lng=-117.8721676`, and `place=92625`, add headers (`accept: application/json`, `x-requested-with: XMLHttpRequest`), and fetch with `..Get`.
   - **JSON to Table Conversion**: Use `to_table` with `"store"` to convert the Starbucks JSON response, focusing on the `store`field and ignoring values like `distance`.
   - **Expand JSON Structure**: Use `expand_column` without a prefix to unpack the first level of the `store` JSON (e.g., `address`, `schedule`), then expand `address` into its fields.
   - **Expand to Rows**: Use `expand_to_rows` on `schedule` to create new rows for each day of the week per store, then expand `schedule` into fields like `hoursFormatted`.
   - **Select and Filter**: Use `select_columns` with reordering to keep `name`, `singleLine`, `hoursFormatted`, and `dayFormatted`, and filter with `..Equal "Thursday"` to get Thursday hours for all stores.
   - **Download and Read File**: Use `Data.download` with `..Get` and `..Always` to download a World Bank GDP dataset from `https://data360files.worldbank.org/data360-data/data/WB_WDI/WB_WDI_SL_GDP_PCAP_EM_KD.csv` to `data/WB_WDI_SL_GDP_PCAP_EM_KD.csv`, requiring explicit write action via the Write All button or "Write" menu, then use `read` to load it as a table.
   - **Direct CSV Fetch**: Use `Data.fetch` with `..Get` and `format=..Delimited` to read the same World Bank CSV directly from the Web into a table.

   ## Use Cases

   - **Real-Time Data Fetching**: Use `Data.fetch` to retrieve current age data from `api.agify.io` for a specific name.
   - **Batch Data Collection**: Use `Data.fetch_many` to gather age data for multiple names with controlled request timing.
   - **Geospatial API Queries**: Use `URI.parse` with coordinates and headers to fetch Starbucks locations near a ZIP code.
   - **JSON Data Structuring**: Use `to_table` and `expand_column` to transform nested JSON into a flat table for analysis.
   - **Temporal Data Extraction**: Use `expand_to_rows` and `filter` to extract specific day schedules (e.g., Thursday) from API data.
   - **Dynamic API Integration**: Construct URLs dynamically with `URI.parse` and query arguments for adaptable data retrieval.
   - **File Download for Offline Use**: Use `Data.download` to save a Web-hosted CSV (e.g., World Bank data) for local analysis, requiring explicit write action.
   - **Direct Web CSV Import**: Use `Data.fetch` with `format=..Delimited` to import CSV data directly from a Web URL.

   ## Benefits

   The Web API Data Input components in Enso Analytics provide a flexible and efficient approach to importing real-time data, complementing support for file-based formats and databases (covered in separate examples). The `Data.fetch`component simplifies single requests, `Data.fetch_many` handles batch processing with rate control, `URI.parse` enables dynamic URL construction, and `Data.download` facilitates file downloads with explicit write control for offline use. These components integrate seamlessly with Enso’s ecosystem, supporting JSON and CSV transformation with `to_table`, `expand_column`, and `expand_to_rows`, and further processing with `filter`, `select`, or visualization tools (accessible via the eyeball icon) for immediate data inspection. The ability to pass API keys as plaintext or securely via Enso Secrets enhances security and flexibility. By streamlining Web API data ingestion, these components empower users to efficiently prepare and analyze dynamic, external datasets in Enso Analytics.
main =
    ## Simple request - hardcoded query argument - this site provides 100 lookups per day at no cost. If you see an error with a status code of 429, you have exceeded its limit. 
    any1 = Data.fetch 'https://api.agify.io?name=alex' method=..Get
    table1 = any1.to_table
    ## base url - this site provides 100 lookups per day at no cost. If you see an error with a status code of 429, you have exceeded its limit. 
    uri1 = URI.parse 'https://api.agify.io'
    ## add as many query arguments as allowed/required. In this case the api just has one argument
    uri2 = uri1.add_query_argument 'name' 'John'
    ## This api does not require headers. It returns a JSON object with count, name and age
    any2 = uri2.fetch ..Get
    table2 = any2.to_table
    any3 = Table.input [['First Name', ['Ned', 'Chase', 'Britney', 'Elizabeth', 'Jane', 'James', 'Adam']]]
    table3 = any3.set (expr '"https://api.agify.io?name=" + [First Name]') "URL"
    table4 = table3.select_columns ['URL']
    any4 = Data.fetch_many table4 ..Get time_between_requests=10
    uri3 = URI.parse 'https://www.starbucks.com/apiproxy/v1/locations'
    uri4 = uri3.add_query_argument 'lat' '33.599184'
    uri5 = uri4.add_query_argument 'lng' '-117.8721676'
    uri6 = uri5.add_query_argument 'place' '92625'
    any5 = uri6.fetch ..Get headers=[Header.accept 'application/json', Header.new "x-requested-with" "XMLHttpRequest"]
    ## Converts JSON to a table. By choosing the store field, this ignores the distance, isFavorite, isNearby, isPrevious, recommendationReason values 
    table5 = any5.to_table ["store"]
    ## expand_column expands the first level (which may be the only level) of the json structure. Notice address, schedule, amenities, pickupOptions, coordinates, mobileOrdering, warningLabels and timeZone all contain JSON that needs to be expanded.
    table6 = table5.expand_column 'store' prefix=..None
    ## expand the address column into its fields
    table7 = table6.expand_column 'address' prefix=..None
    ## expand_to_rows will add new rows to the data. In this case, it added a new row for each day of the week for each store. 
    table9 = table7.expand_to_rows 'schedule'
    ## expand the schuedule column into its fields. 
    table10 = table9.expand_column 'schedule' prefix=..None
    table12 = table10.select_columns ['name', 'singleLine', 'hoursFormatted', 'dayFormatted'] True
    ## Get the addresses and hours for all Starbucks on Thursday
    table11 = table12.filter 'dayFormatted' (..Equal "Thursday")
    ## Same data as above, but here the file is written to the location you choose. 
    file1 = Data.download 'https://data360files.worldbank.org/data360-data/data/WB_WDI/WB_WDI_SL_GDP_PCAP_EM_KD.csv' (File.new 'data/WB_WDI_SL_GDP_PCAP_EM_KD.csv') ..Always ..Get
    ## By adding a read component to the Data.download component, the file is now read from the location written in the step above.
    any6 = file1.read
    ## Read a CSV from the web directly
    any7 = Data.fetch 'https://data360files.worldbank.org/data360-data/data/WB_WDI/WB_WDI_SL_GDP_PCAP_EM_KD.csv' ..Get format=..Delimited



#### METADATA ####
[[{"index":{"value":9838},"size":{"value":10}},"ffc7742b-682f-453a-94d8-0066895810df"],[{"index":{"value":9838},"size":{"value":43}},"3c107f44-2dc9-4c23-8843-bf29c47af8c8"],[{"index":{"value":9838},"size":{"value":56}},"2b079a89-12b7-4db4-baad-b235a810bd70"],[{"index":{"value":9908},"size":{"value":13}},"c582680e-9fff-45c3-bf67-3ba1be612479"],[{"index":{"value":10079},"size":{"value":9}},"382c792f-ad03-4bf1-a0b5-cdfacf00e866"],[{"index":{"value":10079},"size":{"value":32}},"78790bdc-3c83-488d-8e61-efe2bf9ba573"],[{"index":{"value":10222},"size":{"value":23}},"1ac152be-cd6e-446a-80a3-f58ff2169553"],[{"index":{"value":10222},"size":{"value":30}},"38e435e3-1866-4ac0-b093-70a7b0d2b0ef"],[{"index":{"value":10222},"size":{"value":37}},"80f8584e-6a30-4322-991b-df77f98faddf"],[{"index":{"value":10363},"size":{"value":10}},"d5dd8303-96b3-4976-bffe-a82ea0c5e8fb"],[{"index":{"value":10363},"size":{"value":16}},"88cd9988-ed9e-45fa-9e43-006249a8e751"],[{"index":{"value":10393},"size":{"value":13}},"89f02e8b-e945-4709-be9a-c02a12c34838"],[{"index":{"value":10418},"size":{"value":11}},"1fc75227-7909-49ca-b92c-8bb38b4b6ae2"],[{"index":{"value":10418},"size":{"value":95}},"dd6babd4-81f5-4342-af6e-53c123c552b7"],[{"index":{"value":10527},"size":{"value":8}},"cedc4ba7-ef84-4cc4-9c95-d28b3e871019"],[{"index":{"value":10527},"size":{"value":61}},"301a95ff-7112-4eb4-868d-8f0d8ba87d28"],[{"index":{"value":10527},"size":{"value":67}},"8301cda2-3763-4874-957a-90fe504778a8"],[{"index":{"value":10608},"size":{"value":21}},"09cc1e13-c51f-4f19-a45c-43c261d0a93b"],[{"index":{"value":10608},"size":{"value":29}},"41fa6643-5857-4e25-8d35-96db1e3265a6"],[{"index":{"value":10649},"size":{"value":15}},"a623972d-e653-4565-b9ff-c80d88ab0459"],[{"index":{"value":10649},"size":{"value":22}},"3e55eacd-540a-4c76-a930-f60ce5ff7be8"],[{"index":{"value":10649},"size":{"value":28}},"ad9e8b0b-8b68-4373-a157-bf951723e617"],[{"index":{"value":10649},"size":{"value":53}},"50f9acb4-8c76-4ca3-95d2-a2bb56dbfc10"],[{"index":{"value":10714},"size":{"value":9}},"b480af11-d363-4216-a90a-0a57a805265c"],[{"index":{"value":10714},"size":{"value":59}},"a682d741-bbce-417f-a8eb-811f98690652"],[{"index":{"value":10785},"size":{"value":23}},"d36ca678-4367-4369-b682-b962d18ab23c"],[{"index":{"value":10785},"size":{"value":29}},"f7ab2a62-e8ee-4011-9654-07467b6e5001"],[{"index":{"value":10785},"size":{"value":41}},"6f3f8f2e-076c-4380-9ebd-258e0d550c11"],[{"index":{"value":10838},"size":{"value":23}},"b534c99c-c86d-4a73-9984-26f69498924a"],[{"index":{"value":10838},"size":{"value":29}},"7844c92a-698d-4dcd-8e4a-7a9e309434ed"],[{"index":{"value":10838},"size":{"value":44}},"9a2c470c-0074-4c5c-888e-c2213fdeccaf"],[{"index":{"value":10894},"size":{"value":23}},"9e085826-09af-4492-8a3f-a370985f6767"],[{"index":{"value":10894},"size":{"value":31}},"b10584e4-76b3-4ceb-89d7-68a8583c31f7"],[{"index":{"value":10894},"size":{"value":39}},"2dc1bac6-5eb8-4c52-aaaf-1291e70d20f6"],[{"index":{"value":10945},"size":{"value":10}},"cae6c178-29fd-4d2c-b4e7-8ce84591276f"],[{"index":{"value":10945},"size":{"value":16}},"c32ec0a7-4d26-48c7-92e9-8e25be32fc67"],[{"index":{"value":10945},"size":{"value":107}},"84773aa7-5214-4da0-9f2c-3972360d67ef"],[{"index":{"value":11218},"size":{"value":13}},"4d05e690-4484-4a40-aa03-fa3f27f73054"],[{"index":{"value":11218},"size":{"value":23}},"9848cdad-cd8c-45d5-84bc-8197e8a87342"],[{"index":{"value":11505},"size":{"value":20}},"0b949f34-7b97-4b82-92c7-00cf5f77c0c2"],[{"index":{"value":11505},"size":{"value":28}},"1d8e12f9-bc9f-4e0e-8d25-7f7370b492de"],[{"index":{"value":11505},"size":{"value":42}},"59c0fef4-f2a6-4686-843e-622cbb74f115"],[{"index":{"value":11610},"size":{"value":20}},"f549bba5-002d-4a4c-9b41-0af94e7eb1b7"],[{"index":{"value":11610},"size":{"value":30}},"5ca87918-ae5a-4db0-a426-60103d0c451c"],[{"index":{"value":11610},"size":{"value":44}},"f41d5718-3816-4e3b-9482-63a3c918faa7"],[{"index":{"value":11796},"size":{"value":21}},"0a654167-b398-4adb-bcad-86144c725925"],[{"index":{"value":11796},"size":{"value":32}},"c1a7eec8-a59b-4808-8723-44588332576a"],[{"index":{"value":11896},"size":{"value":20}},"c0aa0fdb-0682-493e-8ac7-6a970d04ed4c"],[{"index":{"value":11896},"size":{"value":31}},"6e6ad232-b5f2-4073-b41c-81430e9c3856"],[{"index":{"value":11896},"size":{"value":45}},"47de3fbc-f94b-4d53-8ecc-6b65663d6e51"],[{"index":{"value":11956},"size":{"value":22}},"818240fe-3b64-42f6-9a56-fe18c60f97bf"],[{"index":{"value":11956},"size":{"value":79}},"1aa742f9-ce89-445d-b464-735a6c677d3f"],[{"index":{"value":11956},"size":{"value":84}},"f9e5d6e0-03a3-4875-8288-a83b61404a98"],[{"index":{"value":12120},"size":{"value":14}},"6f24e9f4-a758-4b9d-ade4-693cad3693b9"],[{"index":{"value":12120},"size":{"value":29}},"b8bfadd8-c038-4148-b592-ea4b8315298f"],[{"index":{"value":12120},"size":{"value":50}},"0a2ac755-80a0-41e7-818a-e1788f62fd13"],[{"index":{"value":12268},"size":{"value":13}},"7845a509-7b74-476f-949f-93ea27caae11"],[{"index":{"value":12268},"size":{"value":104}},"19dbff43-a8ee-4e78-acec-206303b1c8c7"],[{"index":{"value":12268},"size":{"value":151}},"92985fd4-d375-4e18-b7f8-0fc88477e129"],[{"index":{"value":12268},"size":{"value":160}},"95a12a67-b16d-49da-bdcb-19a6953c5a2c"],[{"index":{"value":12268},"size":{"value":166}},"835b202b-dd1e-47da-9d60-bd83c4b8a05d"],[{"index":{"value":12578},"size":{"value":10}},"faab269a-cd03-4344-a670-736bc03fb131"],[{"index":{"value":12640},"size":{"value":10}},"9a962a84-6049-4dad-bc5e-c894f8281be4"],[{"index":{"value":12640},"size":{"value":101}},"6ec258d9-3d2c-4bc0-a477-0be2d5514cba"],[{"index":{"value":12640},"size":{"value":107}},"ed2bac86-fe8d-4380-aa15-776d9db31d22"],[{"index":{"value":12640},"size":{"value":126}},"70407793-1f5e-41f7-9cb1-7102c9cc89cb"]]
{"ide":{"node":{"2b079a89-12b7-4db4-baad-b235a810bd70":{"position":{"vector":[-392,-115]},"visualization":{"show":false,"project":{"project":"Builtin"},"name":"Table"}},"3c107f44-2dc9-4c23-8843-bf29c47af8c8":{"position":{"vector":[0,-210]}},"ffc7742b-682f-453a-94d8-0066895810df":{"position":{"vector":[0,-210]}},"c582680e-9fff-45c3-bf67-3ba1be612479":{"position":{"vector":[-392,-197]},"visualization":{"show":true,"width":627.3697509765625}},"78790bdc-3c83-488d-8e61-efe2bf9ba573":{"position":{"vector":[-392,-514]}},"382c792f-ad03-4bf1-a0b5-cdfacf00e866":{"position":{"vector":[-392,-514]}},"80f8584e-6a30-4322-991b-df77f98faddf":{"position":{"vector":[-392,-595]}},"38e435e3-1866-4ac0-b093-70a7b0d2b0ef":{"position":{"vector":[-392,-595]}},"1ac152be-cd6e-446a-80a3-f58ff2169553":{"position":{"vector":[-392,-595]}},"88cd9988-ed9e-45fa-9e43-006249a8e751":{"position":{"vector":[-392,-676]}},"d5dd8303-96b3-4976-bffe-a82ea0c5e8fb":{"position":{"vector":[-392,-676]}},"89f02e8b-e945-4709-be9a-c02a12c34838":{"position":{"vector":[-392,-757]},"visualization":{"show":true,"width":526.8969116210938}},"dd6babd4-81f5-4342-af6e-53c123c552b7":{"position":{"vector":[-409,-1028]}},"1fc75227-7909-49ca-b92c-8bb38b4b6ae2":{"position":{"vector":[-145,-667]}},"8301cda2-3763-4874-957a-90fe504778a8":{"position":{"vector":[-409,-1235]}},"301a95ff-7112-4eb4-868d-8f0d8ba87d28":{"position":{"vector":[-884,-1152]}},"cedc4ba7-ef84-4cc4-9c95-d28b3e871019":{"position":{"vector":[-884,-1152]}},"41fa6643-5857-4e25-8d35-96db1e3265a6":{"position":{"vector":[-409,-1307]}},"09cc1e13-c51f-4f19-a45c-43c261d0a93b":{"position":{"vector":[-884,-1224]}},"50f9acb4-8c76-4ca3-95d2-a2bb56dbfc10":{"position":{"vector":[-409,-1379]},"visualization":{"show":true,"width":920.597412109375,"height":264.81111714377334}},"ad9e8b0b-8b68-4373-a157-bf951723e617":{"position":{"vector":[-884,-1377]}},"3e55eacd-540a-4c76-a930-f60ce5ff7be8":{"position":{"vector":[-884,-1377]}},"a623972d-e653-4565-b9ff-c80d88ab0459":{"position":{"vector":[-884,-1377]}},"a682d741-bbce-417f-a8eb-811f98690652":{"position":{"vector":[1099,84]}},"b480af11-d363-4216-a90a-0a57a805265c":{"position":{"vector":[-34,-2102]}},"6f3f8f2e-076c-4380-9ebd-258e0d550c11":{"position":{"vector":[1099,-6]}},"f7ab2a62-e8ee-4011-9654-07467b6e5001":{"position":{"vector":[-34,-2183]}},"d36ca678-4367-4369-b682-b962d18ab23c":{"position":{"vector":[-34,-2183]}},"9a2c470c-0074-4c5c-888e-c2213fdeccaf":{"position":{"vector":[1099,-87]}},"7844c92a-698d-4dcd-8e4a-7a9e309434ed":{"position":{"vector":[-34,-2264]}},"b534c99c-c86d-4a73-9984-26f69498924a":{"position":{"vector":[-34,-2264]}},"2dc1bac6-5eb8-4c52-aaaf-1291e70d20f6":{"position":{"vector":[1099,-168]},"visualization":{"show":false,"width":768.1767333984375,"project":{"project":"Builtin"},"name":"JSON"}},"b10584e4-76b3-4ceb-89d7-68a8583c31f7":{"position":{"vector":[-34,-2345]}},"9e085826-09af-4492-8a3f-a370985f6767":{"position":{"vector":[-34,-2345]}},"84773aa7-5214-4da0-9f2c-3972360d67ef":{"position":{"vector":[1099,-266]},"visualization":{"show":true,"width":1075.003125,"height":247.8995210016379,"project":{"project":"Builtin"},"name":"JSON"}},"c32ec0a7-4d26-48c7-92e9-8e25be32fc67":{"position":{"vector":[-34,-2426]}},"cae6c178-29fd-4d2c-b4e7-8ce84591276f":{"position":{"vector":[-34,-2426]}},"9848cdad-cd8c-45d5-84bc-8197e8a87342":{"position":{"vector":[1099,-625]},"visualization":{"show":true,"width":933.84833984375,"height":200.90400390625}},"4d05e690-4484-4a40-aa03-fa3f27f73054":{"position":{"vector":[-34,-3030]},"visualization":{"show":true,"width":876.9166015625}},"59c0fef4-f2a6-4686-843e-622cbb74f115":{"position":{"vector":[1099,-948]},"visualization":{"show":true,"width":1065.14814453125,"height":195.1728515625}},"1d8e12f9-bc9f-4e0e-8d25-7f7370b492de":{"position":{"vector":[-34,-3312]}},"0b949f34-7b97-4b82-92c7-00cf5f77c0c2":{"position":{"vector":[-34,-3312]}},"f41d5718-3816-4e3b-9482-63a3c918faa7":{"position":{"vector":[1099,-1224]},"visualization":{"show":true,"width":1056.63916015625}},"5ca87918-ae5a-4db0-a426-60103d0c451c":{"position":{"vector":[-34,-3629]}},"f549bba5-002d-4a4c-9b41-0af94e7eb1b7":{"position":{"vector":[-34,-3629]}},"c1a7eec8-a59b-4808-8723-44588332576a":{"position":{"vector":[1099,-1495]},"visualization":{"show":true,"width":999.3609375}},"0a654167-b398-4adb-bcad-86144c725925":{"position":{"vector":[-13,-4094]}},"47de3fbc-f94b-4d53-8ecc-6b65663d6e51":{"position":{"vector":[1099,-1758]},"visualization":{"show":true,"width":953.830517578125}},"6e6ad232-b5f2-4073-b41c-81430e9c3856":{"position":{"vector":[-13,-4360]},"visualization":{"show":true,"width":953.830517578125}},"c0aa0fdb-0682-493e-8ac7-6a970d04ed4c":{"position":{"vector":[-13,-4325]}},"f9e5d6e0-03a3-4875-8288-a83b61404a98":{"position":{"vector":[1099,-2004]}},"1aa742f9-ce89-445d-b464-735a6c677d3f":{"position":{"vector":[-18,-4611]}},"818240fe-3b64-42f6-9a56-fe18c60f97bf":{"position":{"vector":[146,-4634]}},"0a2ac755-80a0-41e7-818a-e1788f62fd13":{"position":{"vector":[1099,-2102]},"visualization":{"show":true,"width":1125.767431640625,"height":263.8150390625}},"b8bfadd8-c038-4148-b592-ea4b8315298f":{"position":{"vector":[-34,-4808]}},"6f24e9f4-a758-4b9d-ade4-693cad3693b9":{"position":{"vector":[-34,-4808]}},"835b202b-dd1e-47da-9d60-bd83c4b8a05d":{"position":{"vector":[2431,-211]}},"95a12a67-b16d-49da-bdcb-19a6953c5a2c":{"position":{"vector":[2393,84]}},"92985fd4-d375-4e18-b7f8-0fc88477e129":{"position":{"vector":[2393,84]}},"19dbff43-a8ee-4e78-acec-206303b1c8c7":{"position":{"vector":[2393,84]}},"7845a509-7b74-476f-949f-93ea27caae11":{"position":{"vector":[2393,84]}},"faab269a-cd03-4344-a670-736bc03fb131":{"position":{"vector":[2431,-332]},"visualization":{"show":true,"width":1449.70703125,"height":250.46337890625}},"70407793-1f5e-41f7-9cb1-7102c9cc89cb":{"position":{"vector":[2431,108]},"visualization":{"show":true}},"ed2bac86-fe8d-4380-aa15-776d9db31d22":{"position":{"vector":[2434,-724]}},"6ec258d9-3d2c-4bc0-a477-0be2d5514cba":{"position":{"vector":[2434,-724]}},"9a962a84-6049-4dad-bc5e-c894f8281be4":{"position":{"vector":[2434,-724]}}},"widget":{},"import":{},"snapshot":"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"}}