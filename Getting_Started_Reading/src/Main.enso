from Standard.Base import all
from Standard.Table import all
from Standard.Database import all
from Standard.AWS import all
from Standard.Google_Api import all
import Standard.Visualization

## ![Image](eags.png)

   # Reading Data from an Excel Workbook

   ## üóùÔ∏è **Objective 1:**¬† Let‚Äôs read a single sheet in from Excel

   1Ô∏è‚É£	Drag the **sample_bank_data.xlsx** workbook on the canvas. This adds a ***Data.read*** component to the workflow.


   ![Image](/images/1a%20drag%20file.gif)


   2Ô∏è‚É£	Click on the eye **<o>** to open the visualization. You will see a list of the sheets in this workbook (just Sheet1 in this case).¬† Double click **Sheet1**  to add a ***read*** component configured to read this sheet.

   ![Image](/images/1b%20read.gif)


   3Ô∏è‚É£	Click on the eye **<o>** of the new ***read*** component to open the visualization to see the data.

   **An Overview of the Table visualization**

   ![Image](/images/image.png)


   4Ô∏è‚É£	Within visualization you can stretch the window or maximize it using the 4-arrow (outward) button to the right of the visualization eye, or using the shortcut keys <Shift><Space>.¬† 

   *Note:¬† once expanded, you can revert to the original size by using the 4-arrow (inward) button located in the upper left corner or hitting the shortcut* <Shift><Space>  or <esc>*.*

   The next button (after the 4-arrow) allows you to choose the type visualization - in this case table is the default.


   ![Image](/images/1c%20-%20viewing%20data.gif)



   ## üóùÔ∏è **Objective 2:**¬† Filter Data to find ‚Äúexception‚Äù records.

   Next we want to find the records where the field [currency_code]is not valid. We want to find any records where the length of the code is NOT 3 characters. To do this we will first add a [currency_code_length]field and then filter on this.

   1Ô∏è‚É£	From From the ***read*** component add a new component.

   2Ô∏è‚É£	Type **set** and as you do this the available components will reveal a ***set*** component.¬† Either hit the carriage return/enter on your keyboard or use your mouse to add this component (equivalent to expression or formula which will also drive you to this same component if you typed one of these terms). This component allows us to create a derived column from other columns.


   ![Image](/images/1d%20-%20set.gif)

   - Click the value parameter and choose <Simple Expression> from the dropdown list.
   - Click on input and choose [currency_code].
   - Click on the operation argument and choose ***Text*** and then ***length*** from the dropdown list.
   - If you now open visualization, a new column has been added at the end called text_length([currency_code]).
   - To rename this field, update your configuration by setting a new fieldname value in the as ‚Äú ‚Äú argument.¬† Type the new name currency_code_length inside of the quotes and you will have updated the new field to become [currency_code_length].

   **3Ô∏è‚É£**	From the ***set*** component add a new component.

   4Ô∏è‚É£	Type **filter** to add the ***filter*** component.

   - Click on the ‚Äúcolumn‚Äù argument and select the [currency_code_length] column argument.
   - Click on the ‚Äúfilter‚Äù argument and choose ‚ÄúNot Equals‚Äù (note: Not_Equal appears in the configuration).
   - Click on the ‚Äúto‚Äù argument and select <Number Value>.
   - Click on the ‚Äú0‚Äù (default number) in the configuration and type a value of¬† ‚Äú3‚Äù.
   How many records appear in your visualization? The expected result is a single record.

   ![image](onerecord.png)

   ## üóùÔ∏è **Objective 3:**¬† Filter Data to find ‚ÄúSavings Account‚Äù records.

   The [product_name] field will be used in this filtering exercise.¬† Using some of the skills that you‚Äôve learned, you should be able to visualize this product type data and get an expected quantity of 1,026 rows. 


   ![Image](/images/image_1.png)
main =
    operator1 = "Welcome to Enso!"



#### METADATA ####
[[{"index":{"value":3829},"size":{"value":18}},"4b88666b-57f4-4e62-9f57-d7deb26fa722"]]
{"ide":{"node":{"4b88666b-57f4-4e62-9f57-d7deb26fa722":{"position":{"vector":[60,15]}}},"widget":{},"snapshot":"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","import":{}}}