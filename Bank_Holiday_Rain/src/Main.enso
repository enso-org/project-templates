from Standard.Base import all
from Standard.Table import all
from Standard.Database import all
from Standard.AWS import all
from Standard.Google_Api import all
import Standard.Visualization

## ![Image](eaep.png)

   # Extracting Bank Holiday Data from a Web API in Enso

   ![Image](bankholiday.png)

   ## Data Source

   [https://www.gov.uk/bank-holidays.json](https://www.gov.uk/bank-holidays.json)

   ## Project Overview

   Web APIs typically return data as a JSON object, which can be complex to use for analysis.

   We want to get the date of the Early May bank holiday for all years that are available.

   There are two options here:

   1) Extract the Bank Holidays just for England and Wales, if we only do business there.

   2) Extract all Bank Holidays across all of the UK.

   ## Here are the steps we took to solve this problem

   ### Extract the Bank Holidays just for England and Wales

   1️⃣  In both cases, we start with a ***Data.read*** component. Rather than a path to a local file, we pass in the URL

   2️⃣ Expand the JSON. When you click on a key (e.g. "events", Enso creates a ***get*** component that is already configured to extract the data that we want. In this case, I want all of the events that fall under "england and wales'.

   3️⃣ The result LOOKS like a table, but you can see from the label at the top of the 'get' visualization that it is a vector. You don't need to worry about what a vector is, but you do know that you want this to be a table. In order to filter for [title]="Early May bank holiday", you can't do this (easily) if the data is not a table. But using the to_table component solves this problem.

   4️⃣ Filter the data to just "Early May bank holiday

   ## 

   ### Extract all Bank Holidays across all of the UK.

   1️⃣  In both cases, we start with a ***Data.read*** component. Rather than a path to a local file, we pass in the URL

   2️⃣  Convert the JS_object to a Table to allow table operations of expand_column and expand_to_rows.

   3️⃣ Expand the [Value] column into 2 columns, divisions and events. The events are still encoded, so we will need to do more processing.

   4️⃣ Expand the encoded column into rows. The data is still encoded but we have gone from 3 rows to 252 rows.

   5️⃣ Expand the [events] column to its columns. We have now gone from 3 columns to 6 columns.

   6️⃣ Filter to find the events that match "Early May bank holiday'.

   7️⃣ We had multile records for each date, because the Early May bank holiday falls on the same date across all of the UK. The dictinct component was able to find the unique title + date combinations. This solution is more complete than our first because it will find the unique holidays such as St Patrick's Day in Northern Ireland or St Andrew's Day in Scotland.
   
   
   
   
   
main =
    ## In both cases, we start with a Data.read component. Rather than a path to a local file, we pass in the URL
    operator23414 = Data.read 'https://www.gov.uk/bank-holidays.json'
    ## 2 - Expand the JSON. When you click on a key (e.g. "events", Enso creates a get component that is already configured to extract the data that we want. In this case, I want all of the events that fall under "england and wales'. 
    node1 = operator23414.get 'england-and-wales' . get 'events'
    ## Convert to a Table
    any1 = node1.to_table
    ## Filter the data to just "Early May bank holiday
    any2 = any1.filter 'title' (..Equal 'Early May bank holiday')
    text1 = "Enso Sample Project - Extracting Bank Holiday Data from a Web API"
    ## Convert to a table
    any7 = operator23414.to_table
    ## Convert to a row-based table
    any8 = any7.transpose attribute_column_name="Key"
    ## 3 - Expand the [Value] column into its two columns - divisions and events 
    operator85869 = any8.expand_column 'Value' prefix=..None
    ## 4 - Expand the [events] column into rows, with one row per unique event
    operator14190 = operator85869.expand_to_rows 'events'
    ## 5 - Expand the [events] column to its columns. 
    operator44659 = operator14190.expand_column 'events' prefix=..None
    ## 6 - Filter to find the events that match "Early May bank holiday'.
    any3 = operator44659.filter 'title' (..Equal 'Early May bank holiday')
    ## 7 - Find the unique title + date combinations.
    any4 = any3.distinct ['title', 'date']



#### METADATA ####
[[{"index":{"value":2959},"size":{"value":9}},"b46f2d20-90a4-4b46-9082-a508f6f51230"],[{"index":{"value":2959},"size":{"value":49}},"e75c2b42-c302-437e-ac37-c2c87d985aae"],[{"index":{"value":3256},"size":{"value":52}},"1c37833b-a284-4cff-b401-17a713d7bc0e"],[{"index":{"value":3346},"size":{"value":14}},"c0f8e723-90ae-4d6e-a45c-50adf4bd1968"],[{"index":{"value":3427},"size":{"value":11}},"768c2653-d0b5-4307-b85a-ff0bf497e52b"],[{"index":{"value":3427},"size":{"value":19}},"606ecbc2-105e-4d65-95da-dd9b298cff99"],[{"index":{"value":3427},"size":{"value":54}},"d42f2861-9b85-499f-9ec4-dbebf76e76ac"],[{"index":{"value":3494},"size":{"value":67}},"34bb31ca-1756-4b71-b8d5-0f367fd3b8e2"],[{"index":{"value":3599},"size":{"value":22}},"9d5d86c0-b9b0-493a-b8c0-b542be742c15"],[{"index":{"value":3669},"size":{"value":14}},"b0661309-73a5-46fe-81b1-10c352794514"],[{"index":{"value":3669},"size":{"value":42}},"22c3c242-ef14-4869-b689-f467c2ef1c0e"],[{"index":{"value":3814},"size":{"value":18}},"6359a141-2f4f-4871-a801-fe7e700a9eda"],[{"index":{"value":3814},"size":{"value":26}},"cf9a37c2-ebd2-4a3b-9a8d-40d4ae64e53b"],[{"index":{"value":3814},"size":{"value":40}},"9f6eaf68-8ca7-4821-810c-3bd61870f3b7"],[{"index":{"value":3954},"size":{"value":28}},"70b1b150-be73-4819-a9de-dd76d8b61556"],[{"index":{"value":3954},"size":{"value":37}},"793c9ff6-c71f-4ff6-a8b6-fe7c2812efbc"],[{"index":{"value":4067},"size":{"value":27}},"529f8ea6-3337-4867-a380-2a5751745aa1"],[{"index":{"value":4067},"size":{"value":36}},"8b1fce36-2c1a-45c3-acd7-aff3e0a93403"],[{"index":{"value":4067},"size":{"value":50}},"b8629eeb-879d-4c8b-94b3-897c9c5bc4c5"],[{"index":{"value":4203},"size":{"value":20}},"6d7d8ebd-b0bf-48d6-96fc-44c7859e125a"],[{"index":{"value":4203},"size":{"value":28}},"f7cc4ca0-0040-41ae-be5c-aba49c763b6f"],[{"index":{"value":4203},"size":{"value":63}},"a32360d3-0de6-4abb-8d84-a6ef023fdbce"],[{"index":{"value":4332},"size":{"value":13}},"2adc40c6-d789-401b-884b-e030e9e4353b"],[{"index":{"value":4332},"size":{"value":31}},"56330c3c-2319-43fc-9584-37dc2b28733a"]]
{"ide":{"node":{"e75c2b42-c302-437e-ac37-c2c87d985aae":{"position":{"vector":[-332,459]},"visualization":{"show":true,"width":200,"height":365.388427734375,"project":{"project":"Builtin"},"name":"JSON"}},"b46f2d20-90a4-4b46-9082-a508f6f51230":{"position":{"vector":[-12,12]}},"1c37833b-a284-4cff-b401-17a713d7bc0e":{"position":{"vector":[-332,-66]},"visualization":{"show":true}},"c0f8e723-90ae-4d6e-a45c-50adf4bd1968":{"position":{"vector":[-332,-328]},"visualization":{"show":true,"width":465.55126953125}},"d42f2861-9b85-499f-9ec4-dbebf76e76ac":{"position":{"vector":[-332,-603]},"visualization":{"show":true,"width":570.228271484375,"height":238.864501953125}},"606ecbc2-105e-4d65-95da-dd9b298cff99":{"position":{"vector":[-315,-609]}},"768c2653-d0b5-4307-b85a-ff0bf497e52b":{"position":{"vector":[-315,-609]}},"34bb31ca-1756-4b71-b8d5-0f367fd3b8e2":{"position":{"vector":[306,590]}},"9d5d86c0-b9b0-493a-b8c0-b542be742c15":{"position":{"vector":[649,-24]}},"22c3c242-ef14-4869-b689-f467c2ef1c0e":{"position":{"vector":[649,-196]}},"b0661309-73a5-46fe-81b1-10c352794514":{"position":{"vector":[873,155]}},"9f6eaf68-8ca7-4821-810c-3bd61870f3b7":{"position":{"vector":[649,-396]},"visualization":{"show":true,"width":1002.3404235839844}},"cf9a37c2-ebd2-4a3b-9a8d-40d4ae64e53b":{"position":{"vector":[649,-396]},"visualization":{"show":true,"width":1002.3404235839844}},"6359a141-2f4f-4871-a801-fe7e700a9eda":{"position":{"vector":[-64,-124]}},"793c9ff6-c71f-4ff6-a8b6-fe7c2812efbc":{"position":{"vector":[649,-692]},"visualization":{"show":true,"width":1020.5068359374998}},"70b1b150-be73-4819-a9de-dd76d8b61556":{"position":{"vector":[-50,-331]}},"b8629eeb-879d-4c8b-94b3-897c9c5bc4c5":{"position":{"vector":[649,-976]},"visualization":{"show":true,"width":1028.8323974609375}},"8b1fce36-2c1a-45c3-acd7-aff3e0a93403":{"position":{"vector":[649,-954]},"visualization":{"show":true,"width":1028.8323974609375}},"529f8ea6-3337-4867-a380-2a5751745aa1":{"position":{"vector":[-33,-662]}},"a32360d3-0de6-4abb-8d84-a6ef023fdbce":{"position":{"vector":[649,-1269]},"visualization":{"show":true,"width":1003.36181640625,"height":420.2690124511719}},"f7cc4ca0-0040-41ae-be5c-aba49c763b6f":{"position":{"vector":[649,-1238]}},"6d7d8ebd-b0bf-48d6-96fc-44c7859e125a":{"position":{"vector":[649,-1238]}},"56330c3c-2319-43fc-9584-37dc2b28733a":{"position":{"vector":[649,-1849]},"visualization":{"show":true,"width":1231.6630859375,"height":240.97153089649376}},"2adc40c6-d789-401b-884b-e030e9e4353b":{"position":{"vector":[690,-1819]}}},"widget":{},"import":{},"snapshot":"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"}}